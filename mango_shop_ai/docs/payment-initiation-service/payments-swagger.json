{
  "basePath": "/sandbox/v5",
  "definitions": {
    "link": {
      "properties": {
        "href": {
          "description": "URL path to the resource",
          "type": "string",
          "pattern": "^/sandbox/v5/"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "linkPSU": {
      "properties": {
        "href": {
          "description": "Link to page where PSU has to be redirected for SCA process",
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "instructedAmountReference": {
      "properties": {
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code.",
          "type": "string",
          "pattern": "^[A-Z]{3}$",
          "example": "EUR"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. The decimal separator is a dot.",
          "type": "string",
          "pattern": "^[0-9]{1,14}(\\.[0-9]{1,2})?$",
          "example": "5877.78"
        }
      },
      "required": [
        "currency",
        "amount"
      ],
      "type": "object"
    },
    "accountReferenceDomesticSE": {
      "description": "Either IBAN or BBAN should be included, not both.",
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number. If the creditor's account is a personal account in Nordea, it can be provided with the prefix 'PA' followed by the account number, for example: 'bban': 'PA YYMMDDXXXX'.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,30}$",
          "example": "00000000000000"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "accountReference": {
      "description": "Either IBAN or BBAN should be included, not both.",
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,30}$",
          "example": "00000000000000"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "accountReferenceCrossBorderSE": {
      "description": "Either IBAN or BBAN should be included, not both.",
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,34}$",
          "example": "8222-2,222 222 222-2"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,34}$",
          "example": "LT00000000000000000000"
        }
      },
      "type": "object"
    },
    "debtorFeeAccountReference": {
      "description": "Either IBAN or BBAN should be included, not both. Note: A Swedbank customer can have an agreement for a predefined fee account or an agreement for periodical fee debit. In such cases, the provided fee account will not be considered.",
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,30}$",
          "example": "00000000000000"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "accountReferenceSEPA": {
      "properties": {
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "LT00000000000000000000"
        }
      },
      "type": "object"
    },
    "accountReferenceCrossBorderBB": {
      "description": "Either IBAN or BBAN should be included, not both. In case of payment in EUR within EU/EES, IBAN should be included.",
      "properties": {
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "maxLength": 34,
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,34}$",
          "example": "LT00000000000000000000"
        },
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number.",
          "type": "string",
          "maxLength": 34,
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,34}$",
          "example": "8222-2,222 222 222-2"
        }
      },
      "type": "object"
    },
    "debtorAccountReferenceSEPA": {
      "description": "Optional in redirect SCA approach. Mandatory in decoupled SCA approach.",
      "properties": {
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "LT00000000000000000000"
        }
      },
      "type": "object"
    },
    "debtorAccountReferenceSE": {
      "description": "Optional in redirect SCA approach. Mandatory in decoupled SCA approach. Either IBAN or BBAN should be included, not both.",
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consist of clearing number and account number.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,30}$",
          "example": "00000000000000"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "address": {
      "description": "Optional for payments in EUR to a bank in SEPA zone. Mandatory for non-European payments. If address is required, 'country' and 'townName' attributes must be specified, other attributes are optional.",
      "properties": {
        "country": {
          "type": "string",
          "description": "ISO 3166 alpha-2 country code",
          "pattern": "^[A-Z]{2}$",
          "example": "DE"
        },
        "countrySubDivision": {
          "type": "string",
          "maxLength": 35,
          "description": "State, region, county"
        },
        "townName": {
          "type": "string",
          "maxLength": 35,
          "description": "Town or district, municipality, community, village"
        },
        "streetName": {
          "type": "string",
          "maxLength": 70,
          "description": "Street name or house name"
        },
        "buildingNumber": {
          "type": "string",
          "maxLength": 16,
          "description": "Building number and apartment number"
        },
        "houseName": {
          "type": "string",
          "maxLength": 35
        },
        "department": {
          "type": "string",
          "maxLength": 70
        },
        "subDepartment": {
          "type": "string",
          "maxLength": 70
        },
        "postCode": {
          "type": "string",
          "maxLength": 16
        }
      },
      "type": "object",
      "required": [
        "country",
        "townName"
      ]
    },
    "bankAddress": {
      "description": "Optional for payments in EUR to a bank in SEPA zone. For non-European payments, either 'creditorAgent' or 'creditorAgentName' with 'creditorAgentAddress' must be specified. If 'creditorAgentAddress' is required, 'country' and 'townName' attributes must be specified, other attributes are optional.",
      "properties": {
        "country": {
          "type": "string",
          "description": "ISO 3166 alpha-2 country code",
          "pattern": "^[A-Z]{2}$",
          "example": "DE"
        },
        "countrySubDivision": {
          "type": "string",
          "maxLength": 35,
          "description": "State, region, county"
        },
        "townName": {
          "type": "string",
          "maxLength": 35,
          "description": "Town or district, municipality, community, village"
        },
        "streetName": {
          "type": "string",
          "maxLength": 70,
          "description": "Street name or house name"
        },
        "buildingNumber": {
          "type": "string",
          "maxLength": 16,
          "description": "Building number and apartment number"
        },
        "houseName": {
          "type": "string",
          "maxLength": 35
        },
        "department": {
          "type": "string",
          "maxLength": 70
        },
        "subDepartment": {
          "type": "string",
          "maxLength": 70
        },
        "postCode": {
          "type": "string",
          "maxLength": 16
        }
      },
      "type": "object",
      "required": [
        "country",
        "townName"
      ]
    },
    "countryOfResidenceReference": {
      "type": "string",
      "description": "Mandatory only in Latvia if the payment amount is or exceeds 10 000 EUR (or equivalent amount in other currency). ISO 3166 alpha-2 country code.",
      "pattern": "^[A-Z]{2}$",
      "example": "DE"
    },
    "regulatoryReportingCodeReference": {
      "type": "string",
      "description": "In Latvia: Information about declaration of payments. Mandatory if one of the parties (Debtor or Creditor) is a resident and the other party is a nonresident, and payment amount is or exceeds 10 000 EUR (or equivalent amount in other currency). In Estonia, Lithuania: Ignored by Swedbank.",
      "pattern": "^[0-9]{3}$",
      "example": "111"
    },
    "creditorAgentClearing": {
      "description": "Optional parameter. Sort code, ABA, Routing, Fedwire, BSB, Transit number etc. Mainly used for credit transfers to UK, USA, Canada, Australia, China. Can be optionally used when either 'creditorAgent' or 'creditorAgentName' with 'creditorAgentAddress' or all of these parameters are provided.",
      "properties": {
        "clearingSystemCode": {
          "type": "string",
          "description": "For clearing system identification code see https://www.iso20022.org/cataloguemessages/additional-content-messages/external-code-sets. \nCode: ExternalClearingSystemIdentification1Code",
          "maxLength": 5,
          "pattern": "[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ ]+",
          "example": "NZNCC"
        },
        "memberId": {
          "type": "string",
          "description": "Clearing system member identification must follow the format defined for specific clearing system identification code see https://www.iso20022.org/catalogue-messages/additionalcontent-messages/external-code-sets. \nCode: ExternalClearingSystemIdentification1Code",
          "maxLength": 28,
          "pattern": "[0-9a-zA-Z/\\-\\?:\\(\\)\\.,'\\+ ]+",
          "example": "020368"
        }
      },
      "required": [
        "clearingSystemCode",
        "memberId"
      ],
      "type": "object"
    },
    "addRecipient": {
      "description": "Message to TPP informing about the need to authorize the adding of a new recipient.",
      "properties": {
        "category": {
          "type": "string",
          "example": "INFO"
        },
        "code": {
          "type": "string",
          "example": "RECIPIENT_MISSING"
        },
        "text": {
          "type": "string",
          "example": "PSU must add recipient to recipient list first."
        }
      },
      "type": "object",
      "required": [
        "category",
        "code",
        "text"
      ]
    },
    "debtorIdentificationReference": {
      "properties": {
        "organisationIdentification": {
          "description": "Company's identification number.",
          "type": "string"
        },
        "privateIdentification": {
          "description": "Private person's identification number.",
          "type": "string"
        },
        "schemeName": {
          "description": "Debtor's identification type. \n\nAcceptable codes for organisation identification scheme for Domestic Payments: \n Estonia: \"COID, CUST, TXID\"  \nLithuania: \"COID\", \nLatvia \"TXID\" \n\n Acceptable codes for private identification scheme for Domestic Payments:\n Estonia: \"NIDN, CUST, TXID\", \n Lithuania: \"NIDN\", \nLatvia: \"NIDN\". ",
          "type": "string",
          "enum": [
            "COID",
            "CUST",
            "TXID",
            "NIDN"
          ]
        }
      },
      "type": "object"
    },
    "remittanceInformationStructuredBBReference": {
      "description": "Creditor reference. In Latvia and Lithuania, either structured or unstructured information is allowed, but not both. In Estonia, both remittance information fields are allowed.",
      "properties": {
        "reference": {
          "description": "Maximum length might vary depending on the creditor account.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "ABC 070"
        },
        "referenceType": {
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "55"
        },
        "referenceIssuer": {
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "55"
        }
      },
      "required": [
        "reference",
        "referenceType"
      ],
      "type": "object"
    },
    "remittanceInformationUnstructuredBBReference": {
      "description": "Creditor reference. In Latvia and Lithuania, either structured or unstructured information is allowed, but not both. In Estonia, both remittance information fields are allowed.\nIn Intrabank payments and Domestic Payments in euros to other local banks, additional local characters are allowed: In Estonia: Šš, Žž, Õõ, Ää, Öö, Üü. In Latvia: Āā, Čč, Ēē, Ģģ, Īī, Ķķ, Ļļ, Ņņ, Šš, Ūū, Žž. In Lithuania: Ąą, Čč, Ęę, Ėė, Įį, Šš, Ųų, Ūū, Žž.",
      "type": "string",
      "maxLength": 140,
      "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,140}$",
      "example": "Ref Number Merchant"
    },
    "futureDate" : {
      "description": "Date, when the payment should be executed. Used to initiate a future-dated payment. The specified payment date must be in the future, with a minimum of one day ahead and a maximum of 12 months ahead.\nIf not specified, payment will be executed as immediate.",
      "type": "string",
      "format": "date",
      "example": "2019-04-28"
    },
    "instructedAmountReferenceInternational": {
      "properties": {
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code. List of available currencies allowed for different countries is the same as in other Swedbank's digital channels.",
          "type": "string",
          "pattern": "^[A-Z]{3}$",
          "example": "EUR"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. The decimal separator is a dot.",
          "type": "string",
          "pattern": "^[0-9]{1,14}(\\.[0-9]{1,2})?$",
          "example": "5877.78"
        }
      },
      "required": [
        "currency",
        "amount"
      ],
      "type": "object"
    },
    "bicReference": {
      "description": "Beneficiary bank BIC (SWIFT ID) that uniquely identifies a bank, which is connected to a SWIFT system globally. Consists of 8 to 11 characters. If creditor account is provided in IBAN format, it could be required for some countries. If creditor account is provided in BBAN format, either BIC or nationalBankId is required.",
      "type": "string",
      "example": "AAAADEBBXXX"
    },
    "nationalBankIdReference": {
      "description": "A combination of digits that identifies the branch office of the foreign bank. If creditor account is provided in BBAN format, either BIC or nationalBankId is required. It is not compatible with IBAN type of creditor account.",
      "type": "string",
      "maxLength": 18,
      "example": "SWEDSESS"
    },
    "regulatoryReportingCodeSEReference": {
      "description": "Tax reporting code. Mandatory if payment amount is or exceeds 150 000 SEK (or equivalent amount in other currency).",
      "type": "string",
      "maxLength": 3,
      "example": "101 - Varuexport/varuimport"
    },
    "authenticationObject": {
      "description": "Identifies authentication method selected by PSU. TPP should present it to PSU for informational purposes.",
      "properties": {
        "authenticationType": {
          "description": "Type of the authentication method a.k.a friendly name.",
          "type": "string",
          "example": "Smart-Id"
        },
        "authenticationMethodId": {
          "description": "An identification of the authentication method.",
          "type": "string",
          "example": "SMART_ID"
        }
      },
      "type": "object",
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "authenticationObjects": {
      "description": "Authentication methods used by PSU.",
      "properties": {
        "authenticationType": {
          "description": "Type of the authentication method a.k.a friendly name.",
          "type": "string",
          "example": "Smart-Id"
        },
        "authenticationMethodId": {
          "description": "An identification of the authentication method.",
          "type": "string",
          "example": "SMART_ID"
        }
      },
      "type": "object",
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "scaMethods": {
      "description": "This data element is included when SCA (Strong Customer Authentication) is required and TPP has selected decoupled SCA approach ('TPP-Redirect-Preferred' header value in the request was set to \"false\"). TPP should present these methods to PSU for selection.",
      "items": {
        "$ref": "#/definitions/authenticationObjects"
      },
      "type": "array"
    },
    "challengeDataObject": {
      "description": "Returned when challenge data is needed for SCA.",
      "properties": {
        "code": {
          "description": "In Baltic countries – always returned. Challenge code, displayed in SCA application used by the user. TPP should present it to PSU for informational purposes.",
          "type": "string",
          "example": "3748"
        },
        "autoStartToken": {
          "description": "Returned only in Sweden and only if 'Qr-Code-Required' header was omitted or if its value was set to \"false\". TPP should use the autoStartToken to launch the Mobile BankID application on the device used by the user to confirm authorisation. For more information about Mobile BankID integration, refer to Mobile BankId integration guidelines.",
          "type": "string",
          "example": "a4904c4c-3bb4-4e3f-8ac3-0e950e529e5f"
        },
        "imageLink": {
          "description": "Returned only in Sweden and only if 'Qr-Code-Required' header was specified and if its value was set to \"true\". It's a steering link that would return QR code image in PNG format.",
          "type": "string",
          "example": "/authorize-image/3543ad25sdf543"
        }
      },
      "type": "object"
    },
    "supportedTransactionStatus": {
      "description": "Status of the payment's overall life cycle: \n\n \"ACTC\" - \"AcceptedTechnicalValidation\": Payment has been initiated successfully, indicating that authentication, syntactical and semantic validation were successful.\n\n \"ACSC\" - \"AcceptedSettlementCompleted\": Payment has been successfully processed and debited, meaning that settlement on the debtor's account has been completed.\n\n \"ACCP\" - \"AcceptedCustomerProfile\": Payment has been successfully processed and prepared to be debited when the future date becomes the current date. Once the payment is executed, its status changes to ACSC. Relevant for future-dated payments.  \n\n \"ACSP\" - \"AcceptedSettlementInProcess\": All preceding checks, such as technical validation and customer profile, were successful, but payment did not make it before the cut-off time and trading room. Therefore, the payment initiation has been accepted for execution, which means that the payment is being put on hold and will be processed once the trading room is available again.\n\n \"PATC\" - \"PartiallyAcceptedTechnicalCorrect\":  Payment requires countersigning, indicating that the first signature has been applied, but more signatures are still required. \n\n \"CANC\" - \"Cancelled\": Payment initiation has been cancelled before or during execution. \n\n \"RJCT\" - \"Rejected\": Payment initiation or individual transaction included in the payment initiation has been rejected.",
      "type": "string",
      "enum": [
        "ACTC",
        "ACSC",
        "ACCP",
        "ACSP",
        "PATC",
        "CANC",
        "RJCT"
      ],
      "example": "ACTC"
    },
    "supportedScaStatus": {
      "description": "Displays the current state of SCA routine:\n\"received\" - data for authorisaton process has been received and authorisation sub-resource has been created.\n\"started\" - SCA routine has been started: In a redirect approach, PSU has followed the scaRedirect URL; in a decoupled approach, PSU started interaction in the SCA app, but hasn't authorized it yet.\n\"finalised\" - SCA routine has been successfully completed.\n\"failed\" - SCA routine failed, something went wrong during the signing process.",
      "type": "string",
      "enum": [
        "received",
        "started",
        "finalised",
        "failed"
      ],
      "example": "received"
    },
    "paymentInitiationBodyDomesticSE": {
      "description": "Content of the body of a Swedish domestic payment initiation request.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/debtorAccountReferenceSE"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "debtorAccountStatementText": {
          "description": "Debtor reference. It can be used for transfer/payment reconciliation in the account statement. In the account statement, this debtor reference is available for outgoing transactions only, where it is mapped to 'remittanceInformationUnstructured'. \nFor BG/PG payments: Max. 25 chars. For account transfers: Max. 35 chars.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceDomesticSE"
        },
        "creditorFriendlyName": {
          "description": "Required only for account transfers in SEK.",
          "type": "string",
          "maxLength": 70,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,70}$",
          "example": "Name Surname"
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference. It can be used for transfer/payment reconciliation in the account statement. In the account statement, this creditor reference is available for incoming transactions only, where it is mapped to 'remittanceInformationUnstructured'.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "Ref Number Merchant"
        },
        "remittanceInformationStructured": {
          "description": "Used for Bankgiro (\"BG\") and Postgiro (\"PG\") payments.",
          "properties": {
            "reference": {
              "type": "string",
              "maxLength": 70,
              "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,70}$",
              "example": "ABC 070"
            },
            "referenceType": {
              "type": "string",
              "example": "OCR",
              "enum": [
                "OCR",
                "MSG"
              ]
            }
          },
          "required": [
            "reference",
            "referenceType"
          ],
          "type": "object"
        },
        "executionDate": {
          "$ref": "#/definitions/futureDate"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount"
      ],
      "type": "object",
      "example": {
        "instructedAmount": {
          "currency": "SEK",
          "amount": "12"
        },
        "debtorAccount": {
          "iban": "SE0000000000000000000000"
        },
        "debtorAccountStatementText": "TestTPP debtor account statement text",
        "creditorAccount": {
          "bban": "BG 0000-0000"
        },
        "remittanceInformationStructured": {
          "reference": "1687622124",
          "referenceType": "OCR"
        }
      }
    },
    "paymentInitiationBodyCrossBorderSE": {
      "description": "Content of the body of a Swedish international payment initiation request.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReferenceInternational"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceCrossBorderSE"
        },
        "creditorAddress": {
          "type": "string",
          "maxLength": 102,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,102}$",
          "example": "Mock address"
        },
        "creditorName": {
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "Name Surname"
        },
        "bic": {
          "$ref": "#/definitions/bicReference"
        },
        "nationalBankId": {
          "$ref": "#/definitions/nationalBankIdReference"
        },
        "creditorId": {
          "description": "Applicable only for European payments or European payments urgent.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "54321"
        },
        "debtorFeeAccount": {
          "$ref": "#/definitions/debtorFeeAccountReference"
        },
        "priority": {
          "description": "Payment type",
          "type": "string",
          "example": "URGENT",
          "enum": [
            "URGENT",
            "NORMAL"
          ]
        },
        "chargeBearer": {
          "description": "Indicates who bears the service charges associated with a payment transaction.",
          "type": "string",
          "example": "OUR",
          "enum": [
            "OUR",
            "SHA"
          ]
        },
        "originatorPaymentReference": {
          "description": "Payment reference assigned by the initiating party. Applicable only for European payments or European payments urgent.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "12345"
        },
        "originatorId": {
          "description": "Applicable only for European payments or European payments urgent.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "54321"
        },
        "regulatoryReportingCode": {
          "$ref": "#/definitions/regulatoryReportingCodeSEReference"
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference.",
          "type": "string",
          "maxLength": 140,
          "example": "European payment"
        },
        "executionDate": {
          "$ref": "#/definitions/futureDate"
        }
      },
      "required": [
        "creditorAddress",
        "instructedAmount",
        "creditorName",
        "debtorAccount",
        "creditorAccount",
        "remittanceInformationUnstructured",
        "priority",
        "chargeBearer"
      ],
      "type": "object",
      "example": {
        "creditorAddress": "Mock street",
        "creditorName": "Name Surname",
        "instructedAmount": {
          "currency": "SEK",
          "amount": "3.1"
        },
        "debtorAccount": {
          "iban": "SE0000000000000000000000"
        },
        "creditorAccount": {
          "iban": "DK5555555555555555"
        },
        "priority": "NORMAL",
        "chargeBearer": "SHA",
        "remittanceInformationUnstructured": "European payment",
        "executionDate": "2024-07-09"
      }
    },
    "paymentInitiationBodyCrossBorderExpressSE": {
      "description": "Content of the body of a Swedish international express payment initiation request.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceCrossBorderSE"
        },
        "creditorAddress": {
          "type": "string",
          "maxLength": 102,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,102}$",
          "example": "Mock address"
        },
        "creditorName": {
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "Name Surname"
        },
        "bic": {
          "$ref": "#/definitions/bicReference"
        },
        "nationalBankId": {
          "$ref": "#/definitions/nationalBankIdReference"
        },
        "creditorId": {
          "description": "Only valid within EU/EES.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "up to 35"
        },
        "debtorFeeAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "chargeBearer": {
          "description": "Indicates who bears the service charges associated with a payment transaction.",
          "type": "string",
          "example": "OUR",
          "enum": [
            "OUR",
            "SHA"
          ]
        },
        "originatorPaymentReference": {
          "description": "Payment reference assigned by the initiating party. Only valid within EU/EES.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "up to 35"
        },
        "originatorId": {
          "description": "Only valid within EU/EES.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "up to 35"
        },
        "regulatoryReportingCode": {
          "$ref": "#/definitions/regulatoryReportingCodeSEReference"
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference.",
          "type": "string",
          "maxLength": 140
        },
        "executionDate": {
          "$ref": "#/definitions/futureDate"
        }
      },
      "required": [
        "creditorAddress",
        "instructedAmount",
        "creditorName",
        "debtorAccount",
        "creditorAccount",
        "remittanceInformationUnstructured",
        "chargeBearer"
      ],
      "type": "object",
      "example": {
        "creditorAddress": "Mock street",
        "creditorName": "Name Surname",
        "instructedAmount": {
          "currency": "SEK",
          "amount": "3.1"
        },
        "debtorAccount": {
          "iban": "SE0000000000000000000000"
        },
        "creditorAccount": {
          "iban": "DK5555555555555555"
        },
        "chargeBearer": "SHA",
        "remittanceInformationUnstructured": "European payment",
        "executionDate": "2024-07-09"
      }
    },
    "paymentInitiationBodyCrossBorderFinancialSE": {
      "description": "Content of the body of a Swedish international financial payment initiation request.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReferenceInternational"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceCrossBorderSE"
        },
        "creditorAddress": {
          "type": "string",
          "maxLength": 102,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,102}$",
          "example": "Mock address"
        },
        "creditorName": {
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "Name Surname"
        },
        "bic": {
          "$ref": "#/definitions/bicReference"
        },
        "nationalBankId": {
          "$ref": "#/definitions/nationalBankIdReference"
        },
        "creditorId": {
          "description": "Only valid within EU/EES.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "54321"
        },
        "debtorFeeAccount": {
          "$ref": "#/definitions/accountReference"
        },
        "chargeBearer": {
          "description": "Indicates who bears the service charges associated with a payment transaction.",
          "type": "string",
          "example": "OUR",
          "enum": [
            "OUR",
            "SHA"
          ]
        },
        "correspondentBank": {
          "description": "Bank Identifier Code (Swift id) of the correspondent bank. A unique code for each bank which is connected to the Swift-system, active or passive.The code is 8 or 11 characters.",
          "type": "string",
          "example": "8 or 11 characters"
        },
        "originatorPaymentReference": {
          "description": "Payment reference assigned by the initiating party. Only valid within EU/EES.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "up to 35"
        },
        "originatorId": {
          "description": "Only valid within EU/EES.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "54321"
        },
        "regulatoryReportingCode": {
          "$ref": "#/definitions/regulatoryReportingCodeSEReference"
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference.",
          "type": "string",
          "maxLength": 140
        },
        "executionDate": {
          "$ref": "#/definitions/futureDate"
        }
      },
      "required": [
        "creditorAddress",
        "instructedAmount",
        "creditorName",
        "debtorAccount",
        "creditorAccount",
        "correspondentBank",
        "remittanceInformationUnstructured",
        "chargeBearer"
      ],
      "type": "object",
      "example": {
        "creditorAddress": "Mock street",
        "creditorName": "Name",
        "instructedAmount": {
          "currency": "SEK",
          "amount": "3.1"
        },
        "debtorAccount": {
          "iban": "SE0000000000000000000000"
        },
        "creditorAccount": {
          "iban": "DK5555555555555555"
        },
        "chargeBearer": "SHA",
        "remittanceInformationUnstructured": "European payment",
        "executionDate": "2024-07-09"
      }
    },
    "paymentInitiationBodySEPABB": {
      "description": "Content of the body of a SEPA payment initiation request.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/debtorAccountReferenceSEPA"
        },
        "debtorIdentification": {
          "$ref": "#/definitions/debtorIdentificationReference"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceSEPA"
        },
        "creditorName": {
          "description": "Beneficiary name.\nIn Intrabank payments and Domestic Payments in euros to other local banks, additional local characters are allowed: In Estonia: Šš, Žž, Õõ, Ää, Öö, Üü. In Latvia: Āā, Čč, Ēē, Ģģ, Īī, Ķķ, Ļļ, Ņņ, Šš, Ūū, Žž. In Lithuania: Ąą, Čč, Ęę, Ėė, Įį, Šš, Ųų, Ūū, Žž.",
          "type": "string",
          "maxLength": 70,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,70}$",
          "example": "Name Surname"
        },
        "countryOfResidence": {
          "$ref": "#/definitions/countryOfResidenceReference"
        },
        "regulatoryReportingCode": {
          "$ref": "#/definitions/regulatoryReportingCodeReference"
        },
        "creditorAgent": {
          "description": "Beneficiary bank BIC.",
          "type": "string",
          "maxLength": 70,
          "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
          "example": "AAAADEBBXXX"
        },
        "endToEndIdentification": {
          "description": "Recommended to be unique for better identification of the transaction.",
          "maxLength": 35,
          "type": "string",
          "example": "5c1ba924ad2047cfb1e0cc58cb444fd1"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructuredBBReference"
        },
        "remittanceInformationStructured": {
          "$ref": "#/definitions/remittanceInformationStructuredBBReference"
        },
        "requestedExecutionDate": {
          "$ref": "#/definitions/futureDate"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "endToEndIdentification",
        "creditorName"
      ],
      "type": "object",
      "example": {
        "instructedAmount": {
          "currency": "EUR",
          "amount": "12"
        },
        "debtorAccount": {
          "iban": "LT00000000000000000000"
        },
        "creditorAccount": {
          "iban": "LT00000000000000000001"
        },
        "remittanceInformationStructured": {
          "reference": "1687622124",
          "referenceType": "55"
        },
        "endToEndIdentification": "5c1ba924ad2047cfb1e0cc58cb444fd1"
      }
    },
    "paymentInitiationBodySEPAInstantBB": {
      "description": "Body for a SEPA instant payment initiation.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/debtorAccountReferenceSEPA"
        },
        "debtorIdentification": {
          "$ref": "#/definitions/debtorIdentificationReference"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceSEPA"
        },
        "creditorName": {
          "description": "Beneficiary name.\nIn Intrabank payments and Domestic Payments in euros to other local banks, additional local characters are allowed: In Estonia: Šš, Žž, Õõ, Ää, Öö, Üü. In Latvia: Āā, Čč, Ēē, Ģģ, Īī, Ķķ, Ļļ, Ņņ, Šš, Ūū, Žž. In Lithuania: Ąą, Čč, Ęę, Ėė, Įį, Šš, Ųų, Ūū, Žž.",
          "type": "string",
          "maxLength": 70,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,70}$",
          "example": "Name SurnameW"
        },
        "countryOfResidence": {
          "$ref": "#/definitions/countryOfResidenceReference"
        },
        "regulatoryReportingCode": {
          "$ref": "#/definitions/regulatoryReportingCodeReference"
        },
        "creditorAgent": {
          "description": "Beneficiary bank BIC.",
          "type": "string",
          "maxLength": 70,
          "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
          "example": "AAAADEBBXXX"
        },
        "endToEndIdentification": {
          "description": "Recommended to be unique for better identification of the transaction.",
          "maxLength": 35,
          "type": "string",
          "example": "5c1ba924ad2047cfb1e0cc58cb444fd1"
        },
        "remittanceInformationUnstructured": {
          "$ref": "#/definitions/remittanceInformationUnstructuredBBReference"
        },
        "remittanceInformationStructured": {
          "$ref": "#/definitions/remittanceInformationStructuredBBReference"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "endToEndIdentification",
        "creditorName"
      ],
      "type": "object",
      "example": {
        "instructedAmount": {
          "currency": "EUR",
          "amount": "12"
        },
        "debtorAccount": {
          "iban": "LT00000000000000000000"
        },
        "creditorAccount": {
          "iban": "LT00000000000000000001"
        },
        "remittanceInformationStructured": {
          "reference": "1687622124",
          "referenceType": "55"
        },
        "endToEndIdentification": "5c1ba924ad2047cfb1e0cc58cb444fd1"
      }
    },
    "paymentInitiationBodyPain001001": {
      "description": "Body for a SEPA ISO 20022 XML payment initiation based on pain.001.001.03 or pain.001.001.09 format.",
      "type": "string"
    },
    "paymentInitiationBodyCrossBorderBB": {
      "description": "Content of the body of a Baltic international payment initiation request.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/debtorAccountReferenceSEPA"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceCrossBorderBB"
        },
        "creditorName": {
          "description": "Beneficiary name.",
          "type": "string",
          "maxLength": 140,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,140}$",
          "example": "Name Surname"
        },
        "countryOfResidence": {
          "$ref": "#/definitions/countryOfResidenceReference"
        },
        "regulatoryReportingCode": {
          "$ref": "#/definitions/regulatoryReportingCodeReference"
        },
        "creditorAddress": {
          "$ref": "#/definitions/address"
        },
        "creditorAgent": {
          "description": "Beneficiary bank BIC (SWIFT ID) that uniquely identifies a bank, which is connected to a SWIFT system globally. Consists of 8 to 11 characters. For non-European payments, either 'creditorAgent' or 'creditorAgentName' with 'creditorAgentAddress' must be specified.",
          "type": "string",
          "maxLength": 70,
          "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
          "example": "AAAADEBBXXX"
        },
        "creditorAgentName": {
          "description": "The exact name of the beneficiary bank (in unabbreviated form). For non-European payments, either 'creditorAgent' or 'creditorAgentName' with 'creditorAgentAddress' must be specified.",
          "type": "string",
          "maxLength": 140,
          "example": "Bank name"
        },
        "creditorAgentAddress": {
          "$ref": "#/definitions/bankAddress"
        },
        "creditorAgentClearing": {
          "$ref": "#/definitions/creditorAgentClearing"
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference.",
          "type": "string",
          "maxLength": 140,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,140}$",
          "example": "Ref Number Merchant"
        },
        "priority": {
          "description": "Payment type. Optional for payments in EUR to a bank in SEPA zone. Required for non-European payments. Default value is 'NURG'.",
          "type": "string",
          "example": "URGP",
          "enum": [
            "NURG",
            "URGP",
            "SDVA"
          ]
        },
        "chargeBearer": {
          "description": "Indicates who bears the service charges associated with a payment transaction. Optional for payments in EUR to a bank in SEPA zone. Required for non-European payments. Default value is 'SHAR'.",
          "type": "string",
          "example": "DEBT",
          "enum": [
            "DEBT",
            "SHAR"
          ]
        },
        "requestedExecutionDate": {
          "$ref": "#/definitions/futureDate"
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "remittanceInformationUnstructured",
        "creditorName"
      ],
      "type": "object",
      "example": {
        "debtorAccount": {
          "iban": "LT00000000000000000000"
        },
        "instructedAmount": {
          "currency": "EUR",
          "amount": "12"
        },
        "creditorName": "Name Surname",
        "creditorAccount": {
          "iban": "FR0000000000000000000000000"
        },
        "remittanceInformationUnstructured": "Cross Border Payment"
      }
    },
    "psuDataObject": {
      "description": "PSU authentication data needed for selected authentication method. Should be provided only when PSU has chosen a new SCA method. Relevent for Baltic countries only.",
      "properties": {
        "phoneNumber": {
          "description": "Phone number of the PSU. Must be provided if \"MOBILE_ID\" is chosen as authentication method.",
          "type": "string"
        },
        "personalID": {
          "description": "Personal number (national identification number) of the PSU. Must be provided if \"SMART_ID\", \"SIMPLE_ID\" or \"EPARAKSTS_MOBILE\" is chosen as authentication method.",
          "type": "string"
        }
      }
    },
    "decoupledSCABody": {
      "description": "Specifies SCA method selected by PSU.",
      "properties": {
        "authenticationMethodId": {
          "description": "Identification of a chosen SCA method.",
          "type": "string",
          "example": "SMART_ID"
        },
        "psuData": {
          "$ref": "#/definitions/psuDataObject"
        }
      },
      "type": "object",
      "required": [
        "authenticationMethodId"
      ]
    },
    "errorMessage": {
      "description": "Messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "ERROR"
          ]
        },
        "code": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "maxLength": 512
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "responseError": {
      "properties": {
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/errorMessage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "responseErrorWithTransactionStatus": {
      "properties": {
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/errorMessage"
          },
          "type": "array"
        },
        "transactionStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "responseErrorWithScaStatus": {
      "properties": {
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/errorMessage"
          },
          "type": "array"
        },
        "scaStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentResponse_201": {
      "description": "Body of the response in JSON format of a successful payment initiation request",
      "properties": {
        "transactionStatus": {
          "$ref": "#/definitions/supportedTransactionStatus"
        },
        "paymentId": {
          "type": "string",
          "example": "1234-wertiq-983",
          "description": "ID of the created payment resource."
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/authenticationObject"
        },
        "_links": {
          "description": "A list of short-lived steering links to be used by TPP.\nTypes of links presented in this response: \n\n- \"scaRedirect\" - returned in case of redirect SCA approach. TPP should redirect PSU to this link to complete SCA flow in Swedbank UI.\n\n- \"self\" -   link to retrieve the details about the payment resource created by this request.\n\n- \"status\" - link to retrieve the transaction status of the initiated payment.\n\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding  payment authorisation sub-resource. Returned in case of implicit authorisation flow.\n\n- \"startAuthorisation\" - returned in case of explicit authorisation flow. Should be used by TPP to initiate POST request and start authorisation.\n\n- \"startAuthorisationWithAuthenticationMethodSelection\" - returned in case of implicit authorisation flow and if decoupled SCA approach is preferred. Should be used by TPP to initiate PUT request to specify SCA method chosen by PSU and start authorisation process.",
          "properties": {
            "scaRedirect": {
              "$ref": "#/definitions/linkPSU"
            },
            "status": {
              "$ref": "#/definitions/link"
            },
            "self": {
              "$ref": "#/definitions/link"
            },
            "scaStatus": {
              "$ref": "#/definitions/link"
            },
            "startAuthorisation": {
              "$ref": "#/definitions/link"
            },
            "startAuthorisationWithAuthenticationMethodSelection": {
              "$ref": "#/definitions/link"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "type": "object"
    },
    "paymentResponse_201_international": {
      "description": "Body of the response for a successful payment initiation request.",
      "properties": {
        "transactionStatus": {
          "$ref": "#/definitions/supportedTransactionStatus"
        },
        "paymentId": {
          "description": "ID of the created payment resource.",
          "type": "string",
          "example": "1234-wertiq-983"
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/authenticationObject"
        },
        "_links": {
          "description": "A list of short-lived steering links to be used by TPP.\nTypes of links presented in this response: \n\n- \"scaRedirect\" - returned in case of redirect SCA approach. TPP should redirect PSU to this link to complete SCA flow in Swedbank UI.\n\n- \"self\" -   link to retrieve the details about the payment resource created by this request.\n\n- \"status\" - link to retrieve the transaction status of the initiated payment.\n\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding  payment authorisation sub-resource.\n\n- \"startAuthorisation\" - returned in case of explicit authorisation flow (needed in countersigning). Should be used by TPP to start authorisation.",
          "properties": {
            "scaRedirect": {
              "$ref": "#/definitions/linkPSU"
            },
            "status": {
              "$ref": "#/definitions/link"
            },
            "self": {
              "$ref": "#/definitions/link"
            },
            "scaStatus": {
              "$ref": "#/definitions/link"
            },
            "startAuthorisation": {
              "$ref": "#/definitions/link"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "type": "object"
    },
    "paymentResponse_BB_201": {
      "description": "Body of the response for a successful payment initiation request.",
      "properties": {
        "transactionStatus": {
          "$ref": "#/definitions/supportedTransactionStatus"
        },
        "paymentId": {
          "type": "string",
          "example": "1234-wertiq-983",
          "description": "ID of the created payment resource."
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/authenticationObject"
        },
        "_links": {
          "description": "A list of short-lived steering links to be used by TPP.\nTypes of links presented in this response: \n\n- \"scaRedirect\" - returned in case of redirect SCA approach. TPP should redirect PSU to this link to complete SCA flow in Swedbank UI.\n\n- \"self\" -   link to retrieve the details about the payment resource created by this request.\n\n- \"status\" - link to retrieve the transaction status of the initiated payment.\n\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding  payment authorisation sub-resource. Returned in case of implicit authorisation flow.\n\n- \"startAuthorisation\" - returned in case of explicit authorisation flow. Should be used by TPP to initiate POST request and start authorisation.\n\n- \"startAuthorisationWithAuthenticationMethodSelection\" - returned in case of implicit authorisation flow and if decoupled SCA approach is preferred. Should be used by TPP to initiate PUT request to specify SCA method chosen by PSU and start authorisation process.",
          "properties": {
            "scaRedirect": {
              "$ref": "#/definitions/linkPSU"
            },
            "status": {
              "$ref": "#/definitions/link"
            },
            "self": {
              "$ref": "#/definitions/link"
            },
            "scaStatus": {
              "$ref": "#/definitions/link"
            },
            "startAuthorisation": {
              "$ref": "#/definitions/link"
            },
            "startAuthorisationWithAuthenticationMethodSelection": {
              "$ref": "#/definitions/link"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "type": "object"
    }
  },
  "host": "psd2.api.swedbank.com:443",
  "info": {
    "contact": {
      "email": "openbanking@swedbank.com",
      "name": "contact"
    },
    "description": "The Payment Initiation Services (PIS) API is used to initiate payments on behalf of the Payment Service User (PSU). PSU can be a private customer or a representative of the corporate customer with access to the corporate accounts. PIS API is accessible to Third-Party Providers holding a Payment Initiation Service Provider (PISP) license. \nEach request requires a valid OAuth 2.0 token, which must be included in the 'Authorization' header of the request.",
    "license": {
      "name": "See Developer Documentation",
      "url": "https://online.swedbank.se/ConditionsEarchive/download?bankid=1111&id=WEBDOC-PRODE24296774"
    },
    "title": "Payment Initiation Services API",
    "version": "3.0.0"
  },
  "parameters": {
    "Authorization": {
      "description": "Standard security header. Supported only with OAuth2 token in format 'Bearer ${OAuth2_token}'.",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "type": "string"
    },
    "authorisationID": {
      "description": "ID of the authorisation sub-resource.",
      "in": "path",
      "name": "authorisationID",
      "required": true,
      "type": "string"
    },
    "Consent-ID": {
      "description": "ID of the consent which granted access to specified accountID.",
      "format": "UUID",
      "in": "header",
      "name": "Consent-ID",
      "required": true,
      "type": "string"
    },
    "app-id": {
      "description": "API Key (Client ID) from Swedbank developer portal.",
      "format": "UUID",
      "in": "query",
      "name": "app-id",
      "required": false,
      "type": "string"
    },
    "Date": {
      "description": "Standard HTTP header defines the date and time at which the message was originated (in 'HTTP-date' format as defined by RFC 7231 Date/Time Formats, for example, 'Mon, 01 Apr 2019 15:15:01GMT').",
      "format": "date-time-rfc1123",
      "in": "header",
      "name": "Date",
      "required": true,
      "type": "string"
    },
    "X-Request-ID": {
      "description": "ID of the request determined by the initiating party. It must be unique for each request, used to identify the specific request in support processes.",
      "format": "UUID",
      "in": "header",
      "name": "X-Request-ID",
      "required": true,
      "type": "string"
    },
    "Qr-Code-Required": {
      "description": "This is optional header. By default, it is set to \"false\", indicating that device currently used by the user matches the Bank ID device. If specified and set to \"true\", indicates that device currently used by the user does not match the Bank ID device. Currently, relevant only in Sweden.",
      "in": "header",
      "name": "Qr-Code-Required",
      "required": false,
      "type": "boolean",
      "default": "false"
    },
    "TPP-Explicit-Authorisation-Preferred": {
      "description": "This is optional header, if specified and set to \"true\" then it means TPP is expecting to start authorisation process separately.",
      "in": "header",
      "name": "TPP-Explicit-Authorisation-Preferred",
      "required": false,
      "type": "boolean",
      "default": "false"
    },
    "TPP-Redirect-Preferred": {
      "description": "This is optional header, if specified and set to \"false\", then it means TPP is expecting decoupled SCA approach.",
      "in": "header",
      "name": "TPP-Redirect-Preferred",
      "required": false,
      "type": "boolean",
      "default": "true"
    },
    "TPP-Redirect-Preferred_international": {
      "description": "Redirect SCA approach is the only approach supported for international payments. So it should be either set to \"true\" or should not be provided.",
      "in": "header",
      "name": "TPP-Redirect-Preferred",
      "required": false,
      "type": "boolean",
      "default": "true"
    },
    "TPP-Redirect-URI": {
      "description": "URI, to which PSU should be redirected after the completion of SCA process in Swedbank API user interface. Mandatory in redirect SCA approach.",
      "in": "header",
      "name": "TPP-Redirect-URI",
      "required": false,
      "type": "string"
    },
    "TPP-Nok-Redirect-URI": {
      "description": "URI, to which PSU should be redirected if an error occurs during SCA process in Swedbank API user interface.",
      "in": "header",
      "name": "TPP-Nok-Redirect-URI",
      "required": false,
      "type": "string"
    },
    "Accept-BB": {
      "description": "Advertises which content types, expressed as MIME types, can be returned to the client. For Baltic banks only.",
      "in": "header",
      "name": "Accept",
      "required": false,
      "type": "string",
      "enum": [
        "application/json",
        "application/xml"
      ]
    },
    "PSU-IP-Address": {
      "description": "The forwarded header must contain correct information about the IP address of the device used by PSU.",
      "in": "header",
      "name": "PSU-IP-Address",
      "required": true,
      "type": "string",
      "format": "ipv4"
    },
    "PSU-IP-Port": {
      "description": "The forwarded header must contain correct information about the IP port of the device used by the PSU.",
      "in": "header",
      "name": "PSU-IP-Port",
      "required": false,
      "type": "integer"
    },
    "PSU-User-Agent": {
      "description": "The forwarded PSU User-Agent header must contain correct information about PSU used browser to interact with TPP.",
      "in": "header",
      "name": "PSU-User-Agent",
      "required": true,
      "type": "string"
    },
    "PSU-Http-Method": {
      "description": "The forwarded header must contain correct information about the last HTTP method used by PSU to interact with TPP.",
      "in": "header",
      "name": "PSU-Http-Method",
      "required": false,
      "type": "string",
      "enum": [
        "POST",
        "GET",
        "PUT",
        "PATCH",
        "DELETE"
      ]
    },
    "bicSE": {
      "description": "Bank Identifier Code. Mandatory, unless country specific URL is being used to call API.",
      "enum": [
        "SANDSESS",
        "SWEDSESS"
      ],
      "in": "query",
      "name": "bic",
      "required": false,
      "type": "string"
    },
    "bic": {
      "description": "Bank Identifier Code. Mandatory, unless country specific URL is being used to call API.",
      "enum": [
        "SANDSESS",
        "SANDEE2X",
        "SANDLT22",
        "SANDLV22",
        "SWEDSESS",
        "HABAEE2X",
        "HABALT22",
        "HABALV22"
      ],
      "in": "query",
      "name": "bic",
      "required": false,
      "type": "string"
    },
    "bicBB": {
      "description": "Bank Identifier Code. Mandatory, unless country specific URL is being used to call API.",
      "enum": [
        "SANDEE2X",
        "SANDLT22",
        "SANDLV22",
        "HABAEE2X",
        "HABALT22",
        "HABALV22"
      ],
      "in": "query",
      "name": "bic",
      "required": false,
      "type": "string"
    },
    "Digest": {
      "description": "Required for signing of the request. Contained only if 'Signature' header is present in the request. In a production environment, this field is mandatory.",
      "in": "header",
      "name": "Digest",
      "type": "string"
    },
    "Signature": {
      "description": "Required for signing of the request. For more information about signing the request refer to the Developer Documentation. In a production environment, this field is mandatory.",
      "in": "header",
      "name": "Signature",
      "type": "string"
    },
    "payment-product": {
      "description": "Payment product type.",
      "in": "path",
      "name": "payment-product",
      "required": true,
      "type": "string",
      "enum": [
        "se-domestic-credit-transfers",
        "se-international-credit-transfers",
        "se-international-express-credit-transfers",
        "se-international-financial-credit-transfers",
        "sepa-credit-transfers",
        "pain.001-sepa-credit-transfers",
        "instant-sepa-credit-transfers",
        "cross-border-credit-transfers"
      ]
    },
    "paymentID": {
      "description": "ID of the payment resource.",
      "in": "path",
      "name": "paymentID",
      "required": true,
      "type": "string"
    },
    "requestSeDomesticCtBody": {
      "description": "Swedish domestic payment request body object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodyDomesticSE"
      }
    },
    "requestSeInternationalCtBody": {
      "description": "Swedish international payment request body object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodyCrossBorderSE"
      }
    },
    "requestSeInternationalExpressCtBody": {
      "description": "Swedish international express payments request object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodyCrossBorderExpressSE"
      }
    },
    "requestSeInternationalFinancialCtBody": {
      "description": "Swedish international financial payments request object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodyCrossBorderFinancialSE"
      }
    },
    "requestSEPABody": {
      "description": "SEPA payments request body object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodySEPABB"
      }
    },
    "requestSEPAInstantBody": {
      "description": "SEPA instant payments request object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodySEPAInstantBB"
      }
    },
    "requestSEPABodyXML": {
      "description": "SEPA payments request object in XML",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodyPain001001"
      }
    },
    "requestCrossBorderBody": {
      "description": "Baltic cross border payment request body object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/paymentInitiationBodyCrossBorderBB"
      }
    },
    "selectDecoupledSCAMethodBody": {
      "description": "SCA method specification body",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/decoupledSCABody"
      }
    }
  },
  "responses": {
    "paymentCreated": {
      "description": "Payment rescource is created. Execution of the payment will not start until it is approved by the PSU using SCA.",
      "schema": {
        "$ref": "#/definitions/paymentResponse_201"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT",
            "DECOUPLED"
          ]
        }
      },
      "examples": {
        "description": "redirect_with_an_implicitly_created_authorisation_sub_resource",
        "application/json": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "scaRedirect": {
              "href": "https://.../authentication/123wert983sdgff"
            },
            "scaStatus": {
              "href": "/{version}/payments/{payment-product}/1234w5678/authorisations/123auth456"
            },
            "status": {
              "href": "/{version}/payments/{payment-product}/1234w5678/status"
            },
            "self": {
              "href": "/{version}/payments/{payment-product}/1234w5678"
            }
          }
        },
        "application/json_decoupled_with_an_implicitly_created_authorisation_sub_resource": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "scaMethods": [
            {
              "authenticationType": "Mobile-ID",
              "authenticationMethodId": "MOBILE_ID"
            }
          ],
          "chosenScaMethod": {
            "authenticationType": "Mobile-ID",
            "authenticationMethodId": "MOBILE_ID"
          },
          "_links": {
            "startAuthorisationWithAuthenticationMethodSelection": {
              "href": "/{version}/payments/1234w5678/authorisations/123auth456"
            },
            "scaStatus": {
              "href": "/{version}/payments/{payment-product}/1234w5678/authorisations/123auth456"
            },
            "self": {
              "href": "/{version}/payments/{payment-product}/1234w5678"
            },
            "status": {
              "href": "/{version}/payments/{payment-product}/1234w5678/status"
            }
          }
        },
        "application/json_an_explicitly_created_authorisation_sub_resource": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "startAuthorisation": {
              "href": "/{version}/payments/{payment-product}/1234w5678/authorisations"
            },
            "self": {
              "href": "/{version}/payments/{payment-product}/1234w5678"
            },
            "status": {
              "href": "/{version}/payments/{payment-product}/1234w5678/status"
            }
          }
        }
      }
    },
    "paymentCreated_international": {
      "description": "Payment rescource is created. Execution of the payment will not start until it is approved by the PSU using SCA.",
      "schema": {
        "$ref": "#/definitions/paymentResponse_201_international"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT"
          ]
        }
      },
      "examples": {
        "description": "redirect_with_an_implicitly_created_authorisation_sub_resource",
        "application/json": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "scaRedirect": {
              "href": "https://.../authentication/{payment-product}/123wert983sdgff"
            },
            "scaStatus": {
              "href": "/{version}/payments/{payment-product}/1234w5678/authorisations/123auth456"
            },
            "status": {
              "href": "/{version}/payments/{payment-product}/1234w5678/status"
            },
            "self": {
              "href": "/{version}/payments/{payment-product}/1234w5678"
            }
          }
        },
        "application/json_an_explicitly_created_authorisation_sub_resource": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "startAuthorisation": {
              "href": "/{version}/payments/1234w5678/authorisations"
            }
          }
        }
      }
    },
    "paymentCreatedBB": {
      "description": "Payment rescource is created. Execution of the payment will not start until it is approved by the PSU using SCA.",
      "schema": {
        "$ref": "#/definitions/paymentResponse_BB_201"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT",
            "DECOUPLED"
          ]
        }
      },
      "examples": {
        "description": "redirect_with_an_implicitly_created_authorisation_sub_resource",
        "application/json": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "scaRedirect": {
              "href": "https://.../authentication/{payment-product}/123wert983sdgff"
            },
            "scaStatus": {
              "href": "/{version}/payments/{payment-product}/1234w5678/authorisations/123auth456"
            },
            "status": {
              "href": "/{version}/payments/{payment-product}/1234w5678/status"
            },
            "self": {
              "href": "/{version}/payments/{payment-product}/1234w5678"
            }
          }
        },
        "application/json_decoupled_with_an_implicitly_created_authorisation_sub-resource": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "scaMethods": [
            {
              "authenticationType": "Smart-Id",
              "authenticationMethodId": "SMART_ID"
            },
            {
              "authenticationType": "Mobile-ID",
              "authenticationMethodId": "MOBILE_ID"
            }
          ],
          "chosenScaMethod": {
            "authenticationType": "Mobile-ID",
            "authenticationMethodId": "MOBILE_ID"
          },
          "_links": {
            "startAuthorisationWithAuthenticationMethodSelection": {
              "href": "/{version}/payments/1234w5678/authorisations/123auth456"
            },
            "scaStatus": {
              "href": "/{version}/payments/1234w5678/authorisations/123auth456"
            },
            "self": {
              "href": "/{version}/payments/{payment-product}/1234w5678"
            },
            "status": {
              "href": "/{version}/payments/{payment-product}/1234w5678/status"
            }
          }
        },
        "application/json_an_explicitly_created_authorisation_sub-resource": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "startAuthorisation": {
              "href": "/{version}/payments/1234w5678/authorisations"
            }
          }
        }
      }
    },
    "paymentCancelled": {
      "description": "No response body. Payment was cancelled successfully.",
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      }
    },
    "paymentAlreadySigned": {
      "description": "No response body. Payment is already signed and it's cancellation is not possible.",
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      }
    },
    "postAuthorisations_201": {
      "description": "Authorisation sub-resource for the payment created",
      "schema": {
        "properties": {
          "scaStatus": {
            "$ref": "#/definitions/supportedScaStatus"
          },
          "authorisationId": {
            "description": "ID of the created payment authorisation sub-resource.",
            "type": "string",
            "example": "123auth567"
          },
          "scaMethods": {
            "$ref": "#/definitions/scaMethods"
          },
          "chosenScaMethod": {
            "$ref": "#/definitions/authenticationObject"
          },
          "_links": {
            "description": "A list of short-lived steering links to be used by TPP.\nTypes of links presented in this response:\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding payment authorisation sub-resource.\n- \"selectAuthenticationMethod\" - returned in case of decoupled SCA approach. Should be used by TPP to initiate PUT request to specify SCA method chosen by PSU.\n- \"scaRedirect\" - returned in case of redirect SCA approach. TPP should redirect PSU to this link to complete SCA flow in Swedbank UI.",
            "properties": {
              "scaRedirect": {
                "$ref": "#/definitions/linkPSU"
              },
              "scaStatus": {
                "$ref": "#/definitions/link"
              },
              "selectAuthenticationMethod": {
                "$ref": "#/definitions/link"
              }
            }
          }
        },
        "required": [
          "scaStatus",
          "authorisationId",
          "_links"
        ],
        "type": "object"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT",
            "DECOUPLED"
          ]
        }
      },
      "examples": {
        "application/json": {
          "scaStatus": "received",
          "authorisationId": "123auth567",
          "_links": {
            "scaRedirect": {
              "href": "https:/.../authentication/123c"
            },
            "scaStatus": {
              "href": "/{version}/payments/se-domestic-credit-transfers/123abc/authorisations/123auth567"
            }
          }
        },
        "application/decoupledJson": {
          "scaStatus": "received",
          "authorisationId": "123auth567",
          "scaMethods": [
            {
              "authenticationMethodId": "MOBILE_ID",
              "authenticationType": "Mobile BankID"
            }
          ],
          "chosenScaMethod": {
            "authenticationMethodId": "MOBILE_ID",
            "authenticationType": "Mobile BankID"
          },
          "_links": {
            "scaStatus": {
              "href": "/{version}/payments/se-domestic-credit-transfers/123abc/authorisations/123auth567"
            },
            "selectAuthenticationMethod": {
              "href": "/{version}/payments/se-domestic-credit-transfers/123abc/authorisations/123auth567"
            }
          }
        }
      }
    },
    "getAuthorisation_200": {
      "description": "Body of the JSON response with SCA Status",
      "schema": {
        "properties": {
          "scaStatus": {
            "$ref": "#/definitions/supportedScaStatus"
          },
          "tppMessages": {
            "items": {
              "$ref": "#/definitions/errorMessage"
            },
            "type": "array"
          },
          "extendMobileBankId": {
            "description": "For Swedish domestic payments only. Returned if adding the recipient to the debtor's recipient list is required and if Mobile BankID is not extended. A link to the Internet Bank, where the PSU can enable extended Mobile BankID needed for adding the new recipient.",
            "type": "string",
            "example": "online.swedbank.se/mobile-bank-id/extend"
          },
          "_links": {
            "description": "For Swedish domestic payments only. Returned if adding the recipient to the debtor's recipient list was required and if the authorization of adding the new recipient was completed successfully. TPP should use the 'startAuthorisation' link to start a new authorization of the payment.",
            "properties": {
              "startAuthorisation": {
                "$ref": "#/definitions/link"
              }
            }
          }
        },
        "required": [
          "scaStatus"
        ],
        "type": "object"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "scaStatus": "finalised"
        }
      }
    },
    "patchAuthorisation_200": {
      "description": "Body of the response for a successful update of authorization sub-resource",
      "schema": {
        "properties": {
          "scaStatus": {
            "$ref": "#/definitions/supportedScaStatus"
          },
          "challengeData": {
            "$ref": "#/definitions/challengeDataObject"
          },
          "psuMessage": {
            "description": "Text to be displayed to the PSU.\nNote: When SCA is not required, this element will be omitted. In Sweden, if authorisation of adding the new recipient to the debtor's recipient list is required, message will be returned: \"Please confirm the recipient to make the payment. When you have added the recipient, the payment can be made. The recipient will thereafter be stored in your recipient list\".",
            "type": "string",
            "maxLength": 512,
            "example": "Approve payment of ${amount} ${currency} to ${receiver} by using your ${scaMethod} device"
          },
          "tppMessages": {
            "description": "For Swedish domestic payments only. If  'tppMessage' is returned, it means that instead of payment authorisation, the recipient authorisation is initiated and after its completion, TPP should start a new authorisation of the payment by following 'startAuthorisation' steering link returned in the response of a request to get scaStatus.",
            "items": {
              "$ref": "#/definitions/addRecipient"
            },
            "type": "array"
          },
          "chosenScaMethod": {
            "$ref": "#/definitions/authenticationObject"
          },
          "_links": {
            "description": "A list of short-lived steering links to be used by TPP.\nTypes of links presented in this response:\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding authorisation sub-resource.",
            "properties": {
              "scaStatus": {
                "$ref": "#/definitions/link"
              }
            }
          }
        },
        "required": [
          "scaStatus",
          "chosenScaMethod",
          "_links"
        ],
        "type": "object"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT",
            "DECOUPLED"
          ]
        }
      },
      "examples": {
        "application/json": {
          "scaStatus": "started",
          "challengeData": {
            "code": "3748"
          },
          "psuMessage": "Approve payment of ${amount} ${currency} to ${receiver} by using your ${scaMethod} device",
          "chosenScaMethod": {
            "authenticationType": "Smart-Id",
            "authenticationMethodId": "SMART_ID"
          },
          "_links": {
            "scaStatus": {
              "href": "/{version}/payments/{payment-product}/123abc/authorisations/123auth567"
            }
          }
        }
      }
    },
    "getPaymentStatus_200": {
      "description": "Body of the JSON response with transaction status",
      "schema": {
        "properties": {
          "transactionStatus": {
            "$ref": "#/definitions/supportedTransactionStatus"
          },
          "tppMessages": {
            "items": {
              "$ref": "#/definitions/errorMessage"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "transactionStatus"
        ]
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "transactionStatus": "ACSC"
        }
      }
    },
    "getPayment_200": {
      "description": "Response body of the addressed payment resource. Schema model depends on initiated payment.",
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Returns count of possible requests",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Returns count of remaining requests",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Returns count of seconds, when count of remaining requests resets",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "instructedAmount": {
            "currency": "EUR",
            "amount": "1"
          },
          "debtorAccount": {
            "iban": "LT00000000000000000000"
          },
          "creditorAccount": {
            "iban": "LT00000000000000000001"
          },
          "remittanceInformationUnstructured": "Test payment 2024-06-14T11:20:31.100",
          "endToEndIdentification": "5c1ba924ad2047cfb1e0cc58cb444fd1",
          "creditorAgent": "HABALT22",
          "requestedExecutionDate": "2024-06-14",
          "creditorName": "Name Surname"
        }
      }
    },
    "Error_400": {
      "description": "Bad request. Details are provided in the error code and text.",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "FORMAT_ERROR",
              "text": "Mandatory header is missing: Date"
            }
          ]
        }
      }
    },
    "Error_400_withTransactionStatus": {
      "description": "Bad request. Details are provided in the error code and text.",
      "schema": {
        "$ref": "#/definitions/responseErrorWithTransactionStatus"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "transactionStatus": "RJCT",
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "RECIPIENT_INVALID",
              "text": "Invalid creditor account number"
            }
          ]
        }
      }
    },
    "Error_400_withScaStatus": {
      "description": "Bad request. Details are provided in the error code and text.",
      "schema": {
        "$ref": "#/definitions/responseErrorWithScaStatus"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "scaStatus": "failed",
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "FORMAT_ERROR",
              "text": "Mandatory header is missing: Date"
            }
          ]
        }
      }
    },
    "Error_401": {
      "description": "Unauthorized: missing OAuth2 token or it's expired",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "TOKEN_INVALID",
              "text": "Could not match OAuth token to TPP - authorization_link: https://psd2.api.swedbank.com/psd2/authorize?response_type=code&scope=PSD2&bic=SWEDSESS&client_id=&redirect_uri="
            }
          ]
        }
      }
    },
    "Error_403": {
      "description": "Forbidden: TPP has not ordered this API in Swedbank developer portal",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "SERVICE_BLOCKED",
              "text": "API not available"
            }
          ]
        }
      }
    },
    "Error_403_paymentSigned": {
      "description": "Payment is already signed and it's cancellation is not possible",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "SERVICE_BLOCKED",
              "text": "No payments found that are possible to cancel"
            }
          ]
        }
      }
    },
    "Error_403_withTransactionStatus": {
      "description": "Forbidden: TPP has not ordered this API in Swedbank developer portal",
      "schema": {
        "$ref": "#/definitions/responseErrorWithTransactionStatus"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "transactionStatus": "RJCT",
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "SERVICE_BLOCKED",
              "text": "API not available"
            }
          ]
        }
      }
    },
    "Error_404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "RESOURCE_NOT_FOUND",
              "text": "The addressed resource is unknown"
            }
          ]
        }
      }
    },
    "Error_405": {
      "description": "Not allowed HTTP method",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "SERVICE_INVALID",
              "text": "HTTP method POST not supported for /{version}/payments/123abc/authorisations/123auth567"
            }
          ]
        }
      }
    },
    "Error_429": {
      "description": "Access exceeded - too many requests",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "ACCESS_EXCEEDED",
              "text": "Reached parallel requests limit: (10)"
            }
          ]
        }
      }
    },
    "Error_500": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "INTERNAL_ERROR",
              "text": "Internal Error"
            }
          ]
        }
      }
    },
    "Error_503": {
      "description": "Service Temporary Unavailable",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "TEMPORARY_UNAVAILABLE",
              "text": "Planned system maintenance ongoing"
            }
          ]
        }
      }
    }
  },
  "paths": {
    "/payments/se-domestic-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate Swedish domestic transfer/payment on behalf of the Payment Service User (PSU). \nThe following types of domestic transfers/payments can be initiated over this endpoint:\n\n- Bg/Pg payment (immediate or future dated)\n\n- Account transfer in SEK (immediate or future dated)\n\n The initiated transfer/payment is not executed until it is signed by the PSU using SCA. A domestic transfer/payment can be signed by a single PSU, or countersigning may be required. In the case of countersigning, the TPP is responsible for providing a link to start the authorization process for the PSU with the authority to countersign the payment. For transfers/payments between own accounts, SCA exemption is applied.",
        "operationId": "postSeDomesticCt",
        "parameters": [
          {
            "$ref": "#/parameters/bicSE"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/requestSeDomesticCtBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreated"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Swedish Domestic Payment",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/se-international-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate Swedish international transfer/payment on behalf of the Payment Service User (PSU). \nThe following types of international transfers/payments can be initiated over this endpoint:\n\n- Swedbank payment (payment within Swedbank Group) \n\n- European payment (non urgent payment in EUR or SEK within EU/EEA)\n\n- European payment urgent (urgent payment in EUR within EU/EEA)\n\n- International payment \n\n- International payment urgent\n\nInternational payment can be immediate or future dated. The type of payment product is automatically defined in the Bank's payment system based on the payment parameters in the request body, and pricing policy is applied to the PSU accordingly.\n\nThe initiated transfer/payment is not executed until it is signed by the PSU using SCA. International transfer/payment can be signed by a single PSU, or countersigning may be required. In the case of countersigning, the TPP is responsible for providing a link to start the authorization process for the PSU with the authority to countersign the payment.",
        "operationId": "postSeInternationalCt",
        "parameters": [
          {
            "$ref": "#/parameters/bicSE"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred_international"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/requestSeInternationalCtBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreated_international"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Swedish International Payment",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/se-international-express-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate Swedish international express transfer/payment on behalf of the Swedbank Corporate PSU. PSU can only be a corporate user with access to the corporation accounts. For this endpoint, only swedish URL can be used, or, in case BIC is being used instead, SANDSESS or SWEDSESS are allowed as valid bic values.\n\nThe initiated international express transfer/payment is not executed until it is signed by the PSU using SCA. An international express transfer/payment can be signed by a single PSU, or countersigning may be required. In the case of countersigning, the TPP is responsible for providing a link to start the authorization process for the PSU with the authority to countersign the payment.\n\n Based on input parameters product pricing policy is applied to the PSU.\n\n International express payments can be executed on the same day as they are registered. However, they can be registered only on a bank day within particular time frames based on the currency. If the cut-off time is passed, the payment will be rejected.",
        "operationId": "postSeInternationalExpressCt",
        "parameters": [
          {
            "$ref": "#/parameters/bicSE"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred_international"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestSeInternationalExpressCtBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreated_international"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Swedish International Express Payment",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/se-international-financial-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate Swedish international financial credit transfer/payment on behalf of the Swedbank Corporate PSU. PSU can only be a corporate user with access to the corporation accounts. For this endpoint, only swedish URL can be used, or, in case BIC is being used instead, SANDSESS or SWEDSESS are allowed as valid bic values.\n\nThe initiated international financial credit transfer/payment is not executed until it is signed by the PSU using SCA. An international express transfer/payment can be signed by a single PSU, or countersigning may be required. In the case of countersigning, the TPP is responsible for providing a link to start the authorization process for the PSU with the authority to countersign the payment.\n\n Based on input parameters product pricing policy is applied to the PSU.\n\n International financial payment can be immediate or future dated. For future dated payments, execution date should be provided, otherwise payment will be executed as immediate.",
        "operationId": "postSeInternationalFinancialCt",
        "parameters": [
          {
            "$ref": "#/parameters/bicSE"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred_international"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestSeInternationalFinancialCtBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreated_international"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Swedish International Financial Payment",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/sepa-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate a payment in banks where EUR is a local currency (banks in SEPA zone). Available in Baltic countries only. \nThe initiated payment is not executed until it is signed by the PSU using SCA. Initiated payment can be signed by a single PSU, or countersigning may be required. In the case of countersigning, the TPP is responsible for providing a link to start the authorization process for the PSU with the authority to countersign the payment. For payments between own accounts, SCA exemption is applied.",
        "operationId": "postSepaPayment",
        "parameters": [
          {
            "$ref": "#/parameters/bicBB"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestSEPABody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreatedBB"
          },
          "400": {
            "$ref": "#/responses/Error_400_withTransactionStatus"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403_withTransactionStatus"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate SEPA Payment (for Baltic banks)",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/pain.001-sepa-credit-transfers": {
      "post": {
        "consumes": [
          "application/xml"
        ],
        "description": "Allows to initiate a payment in XML format in banks where EUR is a local currency (banks in SEPA zone). Available in Baltic countries only.\n\nThe initiated payment is not executed until it is signed by the PSU using SCA. For payments between own accounts, SCA exemption is applied.\n\nSupported ISO 20022 XML formats are pain.001.001.03 and pain.001.001.09.\n\nPlease note that SEPA payments in XML format requires detailed knowledge of product and in most cases, JSON format covers payment initiation needs.\n\nAdditional details are described in https://www.swedbank.lt/static/pdf/business/d2d/payments/import/ISO_20022_MIG_valid_from_19-11-2023_2_0.pdf.",
        "operationId": "postSepaPaymentXML",
        "parameters": [
          {
            "$ref": "#/parameters/bicBB"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestSEPABodyXML"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreatedBB"
          },
          "400": {
            "$ref": "#/responses/Error_400_withTransactionStatus"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403_withTransactionStatus"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate SEPA Payment (for Baltic banks)",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/instant-sepa-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate an instant SEPA payment in banks where EUR is a local currency. Available in Baltic countries only.\nThe initiated payment is not executed until it is signed by the PSU using SCA. For payments between own accounts, SCA exemption is applied.",
        "operationId": "postSepaInstantPayment",
        "parameters": [
          {
            "$ref": "#/parameters/bicBB"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestSEPAInstantBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreatedBB"
          },
          "400": {
            "$ref": "#/responses/Error_400_withTransactionStatus"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403_withTransactionStatus"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate SEPA Instant Payment (for Baltic banks)",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/cross-border-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate an international payment. Available in Baltic countries only.\nThe initiated payment is not executed until it is signed by the PSU using SCA.\n\nThe definition of an International non-European payment:\n\n - Payment in any currency to a bank outside of SEPA zone;\n\n - Payment in any other currency than EUR to a bank in SEPA zone.",
        "operationId": "postCrossBorderPaymentBB",
        "parameters": [
          {
            "$ref": "#/parameters/bicBB"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestCrossBorderBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreatedBB"
          },
          "400": {
            "$ref": "#/responses/Error_400_withTransactionStatus"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403_withTransactionStatus"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Cross Border Payment (for Baltic banks)",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/{payment-product}/{paymentID}/authorisations/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates an authorisation sub-resource for the corresponding payment. Used if explicit authorisation flow is preffered, usually in decoupled SCA approach, in countersigning, allowing more detailed control of the authorisation process. This endpoint URL is obtained via steering links.",
        "operationId": "postpaymentIdauthorisations",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/postAuthorisations_201"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Start the authorisation process for a payment",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/{payment-product}/{paymentID}/authorisations/{authorisationID}": {
      "get": {
        "description": "Allows to read status of an ongoing payment authorisation process. This endpoint URL is obtained via steering links.",
        "operationId": "getpaymentIdAuthorisationStatus",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/authorisationID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getAuthorisation_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Read payment authorisation state",
        "tags": [
          "payments"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to specify SCA method which will be used for payment authorisation in decoupled SCA approach. Starts SCA process by sending a challenge to user's SCA application. This endpoint URL is obtained via steering links.\n\nNote: In Sweden, if the recipient is not registered in the debtor's recipient list, authorisation for adding the recipient to the list will be required first. For more information about adding the recipient, refer to the Developer Documentation.",
        "operationId": "patchPaymentIdDecoupledAuthorisation",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/authorisationID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/Qr-Code-Required"
          },
          {
            "$ref": "#/parameters/selectDecoupledSCAMethodBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/patchAuthorisation_200"
          },
          "201": {
            "$ref": "#/responses/patchAuthorisation_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Specify SCA method for decoupled authorisation",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/{payment-product}/{paymentID}/status": {
      "get": {
        "description": "Allows to read the transaction status of the corresponding payment resource. This endpoint URL is obtained via steering links.",
        "operationId": "getPaymentIdStatus",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/Accept-BB"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPaymentStatus_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Get the transaction status of a payment initiation.",
        "tags": [
          "payments"
        ]
      }
    },
    "/payments/{payment-product}/{paymentID}": {
      "get": {
        "description": "Allows to read content of the initiated payment. This endpoint URL is obtained via steering links.",
        "operationId": "getPaymentI",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/Accept-BB"
          }
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPayment_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Get content of initiated payment.",
        "tags": [
          "payments"
        ]
      },
      "delete": {
        "description": "Allows TPP to cancel initiated payment by changing it's state to \"CANC\".",
        "operationId": "deleteConsent",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/paymentCancelled"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403_paymentSigned"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Delete initiated payment",
        "tags": [
          "payments"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "description": "The Payment Initiation Service (PIS) allows the initiation of a payment. Following the payment initiation request, payment systems handle the payment data asynchronously. TPP should continuously check the payment status to ensure that it is ready for the subsequent steps in the payment process.",
      "name": "payments"
    }
  ]
}
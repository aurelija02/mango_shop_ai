{
  "basePath": "/sandbox/v5",
  "definitions": {
    "link": {
      "properties": {
        "href": {
          "description": "URL path to the resource",
          "type": "string",
          "pattern": "^/sandbox/v5/"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "linkPSU": {
      "properties": {
        "href": {
          "description": "Link to page where PSU has to be redirected for SCA process",
          "type": "string"
        }
      },
      "required": [
        "href"
      ],
      "type": "object"
    },
    "instructedAmountReference": {
      "properties": {
        "currency": {
          "description": "ISO 4217 Alpha 3 currency code. List of available currencies allowed for different countries is the same as in other Swedbank's digital channels.",
          "type": "string",
          "pattern": "^[A-Z]{3}$",
          "example": "SEK"
        },
        "amount": {
          "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition. Up to 14 significant figures. The decimal separator is a dot.",
          "type": "string",
          "pattern": "^[0-9]{1,14}(\\.[0-9]{1,2})?$",
          "example": "5877.78"
        }
      },
      "required": [
        "currency",
        "amount"
      ],
      "type": "object"
    },
    "debtorFeeAccountReferenceSE": {
      "description": "Either IBAN or BBAN should be included, not both. Note: A Swedbank customer can have an agreement for a predefined fee account or an agreement for periodical fee debit. In such cases, the provided fee account will not be considered.",
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,30}$",
          "example": "00000000000000"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "challengeDataObject": {
      "description": "It is contained in addition to the data element \"chosenScaMethod\" if challenge data is needed for SCA.",
      "properties": {
        "code": {
          "description": "In Baltic countries â€“ always returned. Challenge code, displayed in SCA application used by the user. TPP should present it to PSU for informational purposes.",
          "type": "string",
          "example": "3748"
        },
        "autoStartToken": {
          "description": "Returned only in Sweden and only if 'Qr-Code-Required' header was omitted or if its value was set to \"false\". TPP should use the autoStartToken to launch the Mobile BankID application on the device used by the user to confirm authorisation. For more information about Mobile BankID integration, refer to Mobile BankId integration guidelines.",
          "type": "string",
          "example": "a4904c4c-3bb4-4e3f-8ac3-0e950e529e5f"
        },
        "imageLink": {
          "description": "Returned only in Sweden and only if 'Qr-Code-Required' header was specified and if its value was set to \"true\". It's a steering link that would return QR code image in PNG format.",
          "type": "string",
          "example": "/authorize-image/3543ad25sdf543"
        }
      },
      "type": "object"
    },
    "addRecipient": {
      "description": "Message to TPP informing about the need to authorize the adding of a new recipient.",
      "properties": {
        "category": {
          "type": "string",
          "example": "INFO"
        },
        "code": {
          "type": "string",
          "example": "RECIPIENT_MISSING"
        },
        "text": {
          "type": "string",
          "example": "PSU must add recipient to recipient list first."
        }
      },
      "type": "object",
      "required": [
        "category",
        "code",
        "text"
      ]
    },
    "scaMethods": {
      "description": "This data element is included when SCA (Strong Customer Authentication) is required and TPP has selected decoupled SCA approach ('TPP-Redirect-Preferred' header value in the request was set to \"false\"). TPP should present these methods to PSU for selection.",
      "items": {
        "$ref": "#/definitions/authenticationObjects"
      },
      "type": "array"
    },
    "authenticationObject": {
      "description": "Identifies authentication method selected by PSU. TPP should present it to PSU for informational purposes.",
      "properties": {
        "authenticationType": {
          "description": "Type of the authentication method a.k.a friendly name.",
          "type": "string",
          "example": "Smart-Id"
        },
        "authenticationMethodId": {
          "description": "An identification of the authentication method.",
          "type": "string",
          "example": "SMART_ID"
        }
      },
      "type": "object",
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "authenticationObjects": {
      "description": "Authentication methods used by PSU.",
      "properties": {
        "authenticationType": {
          "description": "Type of the authentication method a.k.a friendly name.",
          "type": "string",
          "example": "Smart-Id"
        },
        "authenticationMethodId": {
          "description": "An identification of the authentication method.",
          "type": "string",
          "example": "SMART_ID"
        }
      },
      "type": "object",
      "required": [
        "authenticationType",
        "authenticationMethodId"
      ]
    },
    "accountReferenceBB": {
      "properties": {
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "accountReferenceSE": {
      "description": "Either IBAN or BBAN should be included, not both.",
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,30}$",
          "example": "00000000000000"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "domesticAccountReferenceSE": {
      "properties": {
        "bban": {
          "description": "Account BBAN representation. BBAN consists of a clearing number and an account number. If the creditor's account is a personal account in Nordea, it can be provided with the prefix 'PA' followed by the account number, for example: 'bban': 'PA YYMMDDXXXX'.",
          "type": "string",
          "pattern": "^[a-zA-Z0-9\\s\\-\\,]{1,30}$",
          "example": "00000000000000"
        },
        "iban": {
          "description": "Account IBAN representation.",
          "type": "string",
          "pattern": "^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$",
          "example": "SE0000000000000000000000"
        }
      },
      "type": "object"
    },
    "supportedTransactionStatus": {
      "description": "Status of the payment's overall life cycle: \n\n \"ACTC\" - \"AcceptedTechnicalValidation\": Payment has been initiated successfully, indicating that authentication, syntactical and semantic validation were successful.\n\n \"ACSC\" - \"AcceptedSettlementCompleted\": Payment has been successfully processed and debited, meaning that settlement on the debtor's account has been completed.\n\n \"ACCP\" - \"AcceptedCustomerProfile\": Payment has been successfully processed and prepared to be debited when the future date becomes the current date. Once the payment is executed, its status changes to ACSC. Relevant for future-dated payments.  \n\n \"ACSP\" - \"AcceptedSettlementInProcess\": All preceding checks, such as technical validation and customer profile, were successful, but payment did not make it before the cut-off time and trading room. Therefore, the payment initiation has been accepted for execution, which means that the payment is being put on hold and will be processed once the trading room is available again.\n\n \"PATC\" - \"PartiallyAcceptedTechnicalCorrect\":  Payment requires countersigning, indicating that the first signature has been applied, but more signatures are still required. \n\n \"CANC\" - \"Cancelled\": Payment initiation has been cancelled before or during execution. \n\n \"RJCT\" - \"Rejected\": Payment initiation or individual transaction included in the payment initiation has been rejected.",
      "type": "string",
      "enum": [
        "ACTC",
        "ACSC",
        "ACCP",
        "ACSP",
        "PATC",
        "CANC",
        "RJCT"
      ],
      "example": "ACTC"
    },
    "supportedScaStatus": {
      "description": "This data element is containing information about the status of the SCA method applied \n\n \"received\" - An authorisation resource has been created successfully. \n\n \"started\" - The addressed SCA routine has been started. In a redirect approach PSU has followed scaRedirect URL, in a decoupled approach PSU started interaction in SCA app but not yet authorised. \n\n \"finalised\" - The SCA routine has been finalised successfully. \n\n \"failed\" - The SCA routine failed. e.g. PSU has chosen wrong SCA mean, which for example has expired. in a redirect approach PSU has pressed \"CANCEL\"",
      "type": "string",
      "enum": [
        "received",
        "started",
        "finalised",
        "failed"
      ],
      "example": "received"
    },
    "recurringPaymentInitiationBodyDomesticSE": {
      "description": "Body for a SE domestic recurring payment initiation.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/accountReferenceSE"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "debtorAccountStatementText": {
          "description": "Debtor reference. It can be used for transfer/payment reconciliation in the account statement. In the account statement, this debtor reference is available for outgoing transactions only, where it is mapped to 'remittanceInformationUnstructured'.\nFor BG/PG payments: Max. 25 chars. For account transfers: Max. 35 chars.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$"
        },
        "creditorAccount": {
          "$ref": "#/definitions/domesticAccountReferenceSE"
        },
        "creditorFriendlyName": {
          "description": "Required only for account transfers in SEK.",
          "type": "string",
          "maxLength": 70,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,70}$",
          "example": "Name SurnameW"
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference. It can be used for transfer/payment reconciliation in the account statement. In the account statement, this creditor reference is available for incoming transactions only, where it is mapped to 'remittanceInformationUnstructured'.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "Ref Number Merchant"
        },
        "startDate": {
          "description": "Date when the initial credit transfer is requested to be executed.",
          "type": "string",
          "format": "date",
          "example": "2019-04-28"
        },
        "frequency": {
          "description": "Valid periodicities for recurring domestic payments.",
          "type": "string",
          "example": "Weekly",
          "enum": [
            "Weekly",
            "Every other week",
            "Monthly",
            "Every other month",
            "Quarterly",
            "Semi Annually",
            "Annually"
          ]
        }
      },
      "required": [
        "instructedAmount",
        "debtorAccount",
        "creditorAccount",
        "startDate",
        "frequency"
      ],
      "type": "object",
      "example": {
        "instructedAmount": {
          "currency": "SEK",
          "amount": "12"
        },
        "debtorAccount": {
          "iban": "SE0000000000000000000000"
        },
        "debtorAccountStatementText": "TestTPP DAST",
        "creditorAccount": {
          "iban": "SE0000000000000000000001"
        },
        "remittanceInformationUnstructured": "iban test",
        "creditorFriendlyName": "iban test",
        "startDate": "2024-10-07",
        "frequency": " Every other week"
      }
    },
    "recurringPaymentInitiationBodyCrossBorderSE": {
      "description": "Content of the body of a Swedish international recurring payment initiation request.",
      "properties": {
        "debtorAccount": {
          "$ref": "#/definitions/accountReferenceSE"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceSE"
        },
        "creditorAddress": {
          "type": "string",
          "maxLength": 102,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,102}$",
          "example": "Mock address"
        },
        "creditorName": {
          "description": "Only required for Account transfers in SEK",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "Name Surname"
        },
        "bic": {
          "description": "Beneficiary bank BIC (SWIFT ID) that uniquely identifies a bank, which is connected to a SWIFT system globally. Consists of 8 to 11 characters. If creditor account is provided in IBAN format, it could be required for some countries. If creditor account is provided in BBAN format, either BIC or nationalBankId is required.",
          "type": "string",
          "example": "AAAADEBBXXX"
        },
        "nationalBankId": {
          "description": "A combination of digits that identifies the branch office of the foreign bank. If creditor account is provided in BBAN format, either BIC or nationalBankId is required. It is not compatible with IBAN type of creditor account.",
          "type": "string",
          "maxLength": 18,
          "example": "SWEDSESS"
        },
        "creditorId": {
          "description": "Applicable only for European payments or European payments urgent.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "54321"
        },
        "debtorFeeAccount": {
          "$ref": "#/definitions/debtorFeeAccountReferenceSE"
        },
        "priority": {
          "description": "Payment type.",
          "type": "string",
          "example": "URGENT",
          "enum": [
            "URGENT",
            "NORMAL"
          ]
        },
        "startDate": {
          "description": "Date when the initial credit transfer is requested to be executed.",
          "type": "string",
          "format": "date",
          "example": "2019-04-28"
        },
        "frequency": {
          "description": "Valid periodicity for recurring international payments.",
          "type": "string",
          "example": "Weekly",
          "enum": [
            "Weekly",
            "Monthly"
          ]
        },
        "originatorPaymentReference": {
          "description": "Payment reference assigned by the initiating party. Applicable only for European payments or European payments urgent.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "up to 35"
        },
        "originatorId": {
          "description": "Applicable only for European payments or European payments urgent.",
          "type": "string",
          "maxLength": 35,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,35}$",
          "example": "up to 35"
        },
        "chargeBearer": {
          "description": "Indicates who bears the service charges associated with a payment transaction.",
          "type": "string",
          "example": "OUR",
          "enum": [
            "OUR",
            "SHA"
          ]
        },
        "regulatoryReportingCode": {
          "description": "Tax reporting code. Mandatory if payment amount is or exceeds 150 000 SEK (or equivalent amount in other currency).",
          "type": "string",
          "maxLength": 3,
          "example": "101 - Varuexport/varuimport"
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference.",
          "type": "string",
          "maxLength": 140
        }
      },
      "required": [
        "creditorAddress",
        "instructedAmount",
        "creditorName",
        "debtorAccount",
        "creditorAccount",
        "remittanceInformationUnstructured",
        "priority",
        "startDate",
        "frequency",
        "chargeBearer"
      ],
      "type": "object",
      "example": {
        "creditorAddress": "Mock street",
        "creditorName": "Name Surname",
        "instructedAmount": {
          "currency": "SEK",
          "amount": "3.1"
        },
        "debtorAccount": {
          "iban": "SE0000000000000000000000"
        },
        "creditorAccount": {
          "iban": "DK5555555555555555"
        },
        "priority": "NORMAL",
        "chargeBearer": "SHA",
        "remittanceInformationUnstructured": "European payment",
        "startDate": "2024-10-07",
        "frequency": "Monthly"
      }
    },
    "recurringPaymentInitiationBodySepaCreditBB": {
      "description": "Body for a Baltics sepa recurring payment agreement initiation.",
      "properties": {
        "endToEndIdentification" : {
          "description": "Recommended to be unique for better identification of the transaction.",
	        "type" : "string",
	        "maxLength": 35
        },
        "debtorAccount": {
          "$ref": "#/definitions/accountReferenceBB"
        },
        "instructedAmount": {
          "$ref": "#/definitions/instructedAmountReference"
        },
        "creditorAccount": {
          "$ref": "#/definitions/accountReferenceBB"
        },
        "creditorName": {
          "description": "Beneficiary name.",
          "type": "string",
          "maxLength": 140,
          "pattern": "^[a-zA-Z0-9/?:().,'+ -]{1,140}$",
          "example": "Name Surname"
        },
        "creditorAgent": {
          "description": "Beneficiary bank BIC.",
          "type": "string",
          "pattern": "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
          "example": "8 or 11 characters"
        },
        "debtorIdentification" : {
          "description": "Depending on debtor type, combination of two fiedls is required, where one field is 'schemeName' and another is 'privateIdentification' (if debtor is private customer) or 'organisationIdentification' (if debtor is corporate customer).",
	        "properties": {
		          "organisationIdentification": {
              "description": "Company's identification number.",
			        "type": "string"
		        },
		        "privateIdentification": {
              "description": "Private person's identification number.",
			        "type": "string"
		        },
  		      "schemeName": {
	  		      "type": "string", "enum" : [ "COID", "CUST", "TXID", "NIDN" ]
		        }
	        },
	        "type": "object",
          "required" : [ "schemeName" ]
        },
        "startDate": {
          "description": "Date when the initial credit transfer is requested to be executed. The specified date must be in the future, with a minimum of one day ahead.",
          "type": "string",
          "format": "date",
          "example": "2019-04-28"
        },
        "endDate": {
          "description": "Date when the recuring payment agreement ends.",
          "type": "string",
          "format": "date",
          "example": "2019-04-28"
        },
        "frequency": {
          "description": "Valid periodicities for recurring payments.",
          "type": "string",
          "example": "Weekly",
          "enum": [
            "Daily",
            "Weekly",
            "Monthly",
            "Quarterly",
            "Annually",
            "Semi Annually",
            "Working days only"
          ]
        },
        "remittanceInformationUnstructured": {
          "description": "Creditor reference. In Latvia and Lithuania, either structured or unstructured information is allowed, but not both. In Estonia, both remittance information fields are allowed.",
          "type": "string",
          "maxLength": 140
        },
        "remittanceInformationStructured" : {
          "description": "Creditor reference. In Latvia and Lithuania, either structured or unstructured information is allowed, but not both. In Estonia, both remittance information fields are allowed.",
          "type" : "object",
          "properties" : {
          	"reference" : { "type" : "string", "maxLength" : 35 },
	          "referenceType" : { "type" : "string",  "maxLength" : 35 },
	          "referenceIssuer" : { "type" : "string",  "maxLength" : 35 }
          },
          "required": [
            "reference",
            "referenceType"
          ]
        }
      },
      "required": [
        "instructedAmount",
        "creditorAccount",
        "creditorName",
        "endToEndIdentification",
        "startDate",
        "frequency"
      ],
      "type": "object",
      "example": {
        "endToEndIdentification": "54738",
        "creditorAddress": "Mock street",
        "creditorName": "Name",
        "instructedAmount": {
          "currency": "EUR",
          "amount": "3.1"
        },
        "debtorAccount": {
          "iban": "LT00000000000000000000"
        },
        "creditorAccount": {
          "iban": "EE000000000000000001"
        },
        "remittanceInformationUnstructured": "European payment",
        "startDate": "2024-10-11",
        "frequency": "Monthly"
      }
    },
    "errorMessage": {
      "description": "Messages to the TPP on operational issues.",
      "properties": {
        "category": {
          "description": "Category of the TPP message category",
          "type": "string",
          "enum": [
            "ERROR"
          ]
        },
        "code": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "maxLength": 512
        }
      },
      "required": [
        "category",
        "code"
      ],
      "type": "object"
    },
    "responseError": {
      "properties": {
        "tppMessages": {
          "items": {
            "$ref": "#/definitions/errorMessage"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "paymentResponse_201": {
      "description": "Body of the response for a successful payment initiation request.",
      "properties": {
        "transactionStatus": {
          "$ref": "#/definitions/supportedTransactionStatus"
        },
        "paymentId": {
          "type": "string",
          "example": "1234-wertiq-983",
          "description": "ID of the created payment resource."
        },
        "scaMethods": {
          "$ref": "#/definitions/scaMethods"
        },
        "chosenScaMethod": {
          "$ref": "#/definitions/authenticationObject"
        },
        "_links": {
          "description": "A list of short-lived steering links to be used by TPP.\nTypes of links presented in this response: \n\n- \"scaRedirect\" - returned in case of redirect SCA approach. TPP should redirect PSU to this link to complete SCA flow in Swedbank UI.\n\n- \"self\" -   link to retrieve the details about the payment resource created by this request.\n\n- \"status\" - link to retrieve the transaction status of the initiated payment.\n\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding  payment authorisation sub-resource. Returned in case of implicit authorisation flow.\n\n- \"startAuthorisation\" - returned in case of explicit authorisation flow. Should be used by TPP to initiate POST request and start authorisation.\n\n- \"startAuthorisationWithAuthenticationMethodSelection\" - returned in case of implicit authorisation flow and if decoupled SCA approach is preferred. Should be used by TPP to initiate PUT request to specify SCA method chosen by PSU and start authorisation process.",
          "properties": {
            "scaRedirect": {
              "$ref": "#/definitions/linkPSU"
            },
            "status": {
              "$ref": "#/definitions/link"
            },
            "self": {
              "$ref": "#/definitions/link"
            },
            "scaStatus": {
              "$ref": "#/definitions/link"
            },
            "startAuthorisation": {
              "$ref": "#/definitions/link"
            },
            "startAuthorisationWithAuthenticationMethodSelection": {
              "$ref": "#/definitions/link"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "transactionStatus",
        "paymentId",
        "_links"
      ],
      "type": "object"
    },
    "decoupledSCABody": {
      "description": "Specifies SCA method selected by PSU.",
      "properties": {
        "authenticationMethodId": {
          "description": "An identification which will be required to be submited with the request in order to start authentication.",
          "type": "string",
          "example": "SMART_ID"
        },
        "psuData": {
          "$ref": "#/definitions/psuDataObject"
        }
      },
      "type": "object",
      "required": [
        "authenticationMethodId"
      ]
    },
    "psuDataObject": {
      "description": "PSU Authentication data which identifies PSUs selected authentication method. Should only be used when a new SCA method has been chosen.",
      "properties": {
        "phoneNumber": {
          "description": "PSUs phone number must be provided together with \"MOBILE_ID\" as a chosen sca method. For Baltic banks only.",
          "type": "string"
        },
        "personalID": {
          "description": "PSUs personal id must be provided together with \"SMART_ID\", \"SIMPLE_ID\" or \"EPARAKSTS_MOBILE\" as a chosen sca method. For Baltic banks only.",
          "type": "string"
        }
      }
    }
  },
  "host": "psd2.api.swedbank.com:443",
  "info": {
    "contact": {
      "email": "openbanking@swedbank.com",
      "name": "contact"
    },
    "description": "This API is used to initiate recurring/periodic payments on behalf of the Payment Service User (PSU). PSU can be a private customer or a representative of the corporate customer with access to the corporate accounts. This API is accessible to Third-Party Providers holding a Payment Initiation Service Provider (PISP) license.\nEach request requires a valid OAuth 2.0 token, which must be included in the 'Authorization' header of the request.",
    "license": {
      "name": "See Developer Documentation",
      "url": "https://online.swedbank.se/ConditionsEarchive/download?bankid=1111&id=WEBDOC-PRODE24296774"
    },
    "title": "Recurring/Periodic Payment Initiation Services API",
    "version": "3.0.0"
  },
  "parameters": {
    "Authorization": {
      "description": "Standard security header. Supported only with OAuth2 token in format 'Bearer ${OAuth2_token}'.",
      "in": "header",
      "name": "Authorization",
      "required": true,
      "type": "string"
    },
    "authorisationID": {
      "description": "ID of an authorisation sub-resource.",
      "in": "path",
      "name": "authorisationID",
      "required": true,
      "type": "string"
    },
    "Consent-ID": {
      "description": "ID of the consent which granted access to specified accountID.",
      "format": "UUID",
      "in": "header",
      "name": "Consent-ID",
      "required": true,
      "type": "string"
    },
    "app-id": {
      "description": "API Key (Client ID) from Swedbank developer portal.",
      "format": "UUID",
      "in": "query",
      "name": "app-id",
      "required": false,
      "type": "string"
    },
    "Date": {
      "description": "Standard HTTP header defines the date and time at which the message was originated (in 'HTTP-date' format as defined by RFC 7231 Date/Time Formats, for example, 'Mon, 01 Apr 2019 15:15:01GMT').",
      "format": "date-time-rfc1123",
      "in": "header",
      "name": "Date",
      "required": true,
      "type": "string"
    },
    "X-Request-ID": {
      "description": "ID of the request determined by the initiating party. It must be unique for each request, used to identify the specific request in support processes.",
      "format": "UUID",
      "in": "header",
      "name": "X-Request-ID",
      "required": true,
      "type": "string"
    },
    "Qr-Code-Required": {
      "description": "This is optional header. By default, it is set to \"false\", indicating that device currently used by the user matches the Bank ID device. If specified and set to \"true\", indicates that device currently used by the user does not match the Bank ID device. Currently, relevant only in Sweden.",
      "in": "header",
      "name": "Qr-Code-Required",
      "required": false,
      "type": "boolean",
      "default": "false"
    },
    "TPP-Explicit-Authorisation-Preferred": {
      "description": "This is optional header, if specified and set to \"true\" then it means TPP is expecting to start authorisation process separately.",
      "in": "header",
      "name": "TPP-Explicit-Authorisation-Preferred",
      "required": false,
      "type": "boolean",
      "default": "false"
    },
    "TPP-Redirect-Preferred": {
      "description": "This is optional header, if specified and set to \"false\", then it means TPP is expecting decoupled SCA approach. Decoupled approach for recurring payment initiation is currently only available in Sweden.",
      "in": "header",
      "name": "TPP-Redirect-Preferred",
      "required": false,
      "type": "boolean",
      "default": "true"
    },
    "TPP-Redirect-URI": {
      "description": "URI, to which PSU should be redirected after the completion of SCA process in Swedbank API user interface. Mandatory in redirect SCA approach.",
      "in": "header",
      "name": "TPP-Redirect-URI",
      "required": false,
      "type": "string"
    },
    "TPP-Nok-Redirect-URI": {
      "description": "URI, to which PSU should be redirected if an error occurs during SCA process in Swedbank API user interface.",
      "in": "header",
      "name": "TPP-Nok-Redirect-URI",
      "required": false,
      "type": "string"
    },
    "PSU-IP-Address": {
      "description": "The forwarded header must contain correct information about the IP address of the device used by PSU.",
      "in": "header",
      "name": "PSU-IP-Address",
      "required": true,
      "type": "string",
      "format": "ipv4"
    },
    "PSU-IP-Port": {
      "description": "The forwarded header must contain correct information about the IP port of the device used by the PSU.",
      "in": "header",
      "name": "PSU-IP-Port",
      "required": false,
      "type": "integer"
    },
    "PSU-User-Agent": {
      "description": "The forwarded PSU User-Agent header must contain correct information about PSU used browser to interact with TPP.",
      "in": "header",
      "name": "PSU-User-Agent",
      "required": true,
      "type": "string"
    },
    "PSU-Http-Method": {
      "description": "The forwarded header must contain correct information about the last HTTP method used by PSU to interact with TPP.",
      "in": "header",
      "name": "PSU-Http-Method",
      "required": false,
      "type": "string",
      "enum": [
        "POST",
        "GET",
        "PUT",
        "PATCH",
        "DELETE"
      ]
    },
    "bicSE": {
      "description": "Bank Identifier Code. Mandatory, unless country specific URL is being used to call API.",
      "enum": [
        "SANDSESS",
        "SWEDSESS"
      ],
      "in": "query",
      "name": "bic",
      "required": false,
      "type": "string"
    },
    "bicBB": {
      "description": "Bank Identifier Code. Mandatory, unless country specific URL is being used to call API.",
      "enum": [
        "SANDEE2X",
        "SANDLT22",
        "SANDLV22",
        "HABAEE2X",
        "HABALT22",
        "HABALV22"
      ],
      "in": "query",
      "name": "bic",
      "required": false,
      "type": "string"
    },
    "bic": {
      "description": "Bank Identifier Code. Mandatory, unless country specific URL is being used to call API.",
      "enum": [
        "SANDEE2X",
        "SANDLT22",
        "SANDLV22",
        "SANDSESS",
        "HABAEE2X",
        "HABALT22",
        "HABALV22",
        "SWEDSESS"
      ],
      "in": "query",
      "name": "bic",
      "required": false,
      "type": "string"
    },
    "Digest": {
      "description": "Required for signing of the request. Contained only if 'Signature' header is present in the request. In a production environment, this field is mandatory.",
      "in": "header",
      "name": "Digest",
      "type": "string"
    },
    "Signature": {
      "description": "Required for signing of the request. For more information about signing the request refer to the Developer Documentation. In a production environment, this field is mandatory.",
      "in": "header",
      "name": "Signature",
      "type": "string"
    },
    "payment-product": {
      "description": "Payment product type.",
      "in": "path",
      "name": "payment-product",
      "required": true,
      "type": "string",
      "enum": [
        "se-domestic-credit-transfers",
        "se-international-credit-transfers",

        "sepa-credit-transfers"
      ]
    },
    "paymentID": {
      "description": "ID of the payment resource.",
      "in": "path",
      "name": "paymentID",
      "required": true,
      "type": "string"
    },
    "requestSeDomesticRecurringCtBody": {
      "description": "Swedish domestic recurring payments request body object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/recurringPaymentInitiationBodyDomesticSE"
      }
    },
    "requestSeInternationalRecurringCtBody": {
      "description": "Swedish international recurring payments request body object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/recurringPaymentInitiationBodyCrossBorderSE"
      }
    },
    "requestSepaCreditTransferRecurringCtBody": {
      "description": "SEPA recurring payments request body object",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/recurringPaymentInitiationBodySepaCreditBB"
      }
    },
    "selectDecoupledSCAMethodBody": {
      "description": "SCA method specification body",
      "in": "body",
      "name": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/decoupledSCABody"
      }
    }
  },
  "responses": {
    "paymentCreated": {
      "description": "Payment rescource is created. Execution of the payment will not start until it is approved by the PSU using SCA.",
      "schema": {
        "$ref": "#/definitions/paymentResponse_201"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT",
            "DECOUPLED"
          ]
        }
      },
      "examples": {
        "application/json": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "scaRedirect": {
              "href": "https://.../authentication/123wert983sdgff"
            },
            "scaStatus": {
              "href": "/{version}/periodic-payments/{payment-product}/1234w5678/authorisations/123auth456"
            },
            "status": {
              "href": "/{version}/periodic-payments/{payment-product}/1234w5678/status"
            },
            "self": {
              "href": "/{version}/periodic-payments/{payment-product}/1234w5678"
            }
          }
        },
        "application/json_withExplicitAuthorisation": {
          "transactionStatus": "ACTC",
          "paymentId": "1234w5678",
          "_links": {
            "startAuthorisation": {
              "href": "/{version}/periodic-payments/{payment-product}/1234w5678/authorisations"
            },
            "self": {
              "href": "/{version}/periodic-payments/{payment-product}/1234w5678"
            },
            "status": {
              "href": "/{version}/periodic-payments/{payment-product}/1234w5678/status"
            }
          }
        }
      }
    },
    "patchAuthorisation_200": {
      "description": "Body of the response for a successful update of authorization sub-resource",
      "schema": {
        "properties": {
          "scaStatus": {
            "$ref": "#/definitions/supportedScaStatus"
          },
          "challengeData": {
            "$ref": "#/definitions/challengeDataObject"
          },
          "psuMessage": {
            "description": "Text to be displayed to the PSU.\nNote: When SCA is not required, this element will be omitted. In Sweden, if authorisation of adding the new recipient to the debtor's recipient list is required, message will be returned: \"Please confirm the recipient to make the payment. When you have added the recipient, the payment can be made. The recipient will thereafter be stored in your recipient list\".",
            "type": "string",
            "maxLength": 512,
            "example": "Approve payment of ${amount} ${currency} to ${receiver} by using your ${scaMethod} device"
          },
          "tppMessages": {
            "description": "For Swedish domestic payments only. If 'tppMessage' is returned, it means that instead of payment authorisation, the recipient authorisation is initiated and after its completion, TPP should start a new authorisation of the payment by following 'startAuthorisation' steering link returned in the response of a request to get scaStatus.",
            "items": {
              "$ref": "#/definitions/addRecipient"
            },
            "type": "array"
          },
          "chosenScaMethod": {
            "$ref": "#/definitions/authenticationObject"
          },
          "_links": {
            "description": "A list of short-lived steering links to be used by TPP.\n Types of links presented in this response: \n\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding authorisation sub-resource.",
            "properties": {
              "scaStatus": {
                "$ref": "#/definitions/link"
              }
            }
          }
        },
        "required": [
          "scaStatus",
          "psuMessage",
          "chosenScaMethod",
          "_links"
        ],
        "type": "object"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT",
            "DECOUPLED"
          ]
        }
      },
      "examples": {
        "application/json": {
          "scaStatus": "started",
          "challengeData": {
            "code": "3748"
          },
          "psuMessage": "Approve payment of ${amount} ${currency} to ${receiver} by using your ${scaMethod} device",
          "chosenScaMethod": {
            "authenticationType": "Smart-Id",
            "authenticationMethodId": "SMART_ID"
          },
          "_links": {
            "scaStatus": {
              "href": "/{version}/periodic-payments/{payment-product}/123abc/authorisations/123auth567"
            }
          }
        }
      }
    },
    "postAuthorisations_201": {
      "description": "Authorisation sub-resource for the payment created",
      "schema": {
        "properties": {
          "scaStatus": {
            "$ref": "#/definitions/supportedScaStatus"
          },
          "authorisationId": {
            "description": "ID of the created payment authorisation sub-resource.",
            "type": "string",
            "example": "123auth567"
          },
          "scaMethods": {
            "$ref": "#/definitions/scaMethods"
          },
          "chosenScaMethod": {
            "$ref": "#/definitions/authenticationObject"
          },
          "_links": {
            "description": "A list of short-lived steering links to be used by TPP. Types of links presented in this response:\n\n- \"scaRedirect\" - returned in case of redirect SCA approach. TPP should redirect PSU to this link to complete SCA flow in Swedbank UI.\n\n- \"scaStatus\" - link to retrieve the scaStatus of the corresponding payment authorisation sub-resource. \n\n- \"selectAuthenticationMethod\" - returned in case of decoupled SCA approach. Should be used by TPP to initiate PUT request to specify SCA method chosen by PSU.",
            "properties": {
              "scaRedirect": {
                "$ref": "#/definitions/linkPSU"
              },
              "scaStatus": {
                "$ref": "#/definitions/link"
              },
              "selectAuthenticationMethod": {
                "$ref": "#/definitions/link"
              }
            }
          }
        },
        "required": [
          "scaStatus",
          "authorisationId",
          "_links"
        ],
        "type": "object"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        },
        "ASPSP-SCA-Approach": {
          "description": "Determines SCA type",
          "type": "string",
          "enum": [
            "REDIRECT",
            "DECOUPLED"
          ]
        }
      },
      "examples": {
        "application/json": {
          "scaStatus": "received",
          "authorisationId": "123auth567",
          "_links": {
            "scaRedirect": {
              "href": "https:/.../authentication/123c"
            },
            "scaStatus": {
              "href": "/{version}/periodic-payments/{payment-product}/123abc/authorisations/123auth567"
            }
          }
        }
      }
    },
    "getAuthorisation_200": {
      "description": "Body of the JSON response with SCA Status",
      "schema": {
        "properties": {
          "scaStatus": {
            "$ref": "#/definitions/supportedScaStatus"
          },
          "tppMessages": {
            "items": {
              "$ref": "#/definitions/errorMessage"
            },
            "type": "array"
          },
          "mobileBankIDExtensionLink": {
            "description": "For Swedish domestic payments only. Returned if adding the recipient to the debtor's recipient list is required and if Mobile BankID is not extended. A link to the Internet Bank, where the PSU can enable extended Mobile BankID needed for adding the new recipient.",
            "type": "string",
            "example": "online.swedbank.se/mobile-bank-id/extend"
          },
          "_links": {
            "description": "For Swedish domestic payments only. Returned if adding the recipient to the debtor's recipient list was required and if the authorization of adding the new recipient was completed successfully. TPP should use the 'startAuthorisation' link to start a new authorization of the payment.",
            "properties": {
              "startAuthorisation": {
                "$ref": "#/definitions/link"
              }
            }
          }
        },
        "required": [
          "scaStatus"
        ],
        "type": "object"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "scaStatus": "finalised"
        }
      }
    },
    "getPaymentStatus_200": {
      "description": "Body of the JSON response with transaction status",
      "schema": {
        "properties": {
          "transactionStatus": {
            "$ref": "#/definitions/supportedTransactionStatus"
          },
          "tppMessages": {
            "items": {
              "$ref": "#/definitions/errorMessage"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "transactionStatus"
        ]
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "transactionStatus": "ACSC"
        }
      }
    },
    "getPayment_200": {
      "description": "Response body of the addressed recurring payment resource. Schema model depends on initiated recurring payment (agreement).",
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Returns count of possible requests",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Returns count of remaining requests",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Returns count of seconds, when count of remaining requests resets",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "creditorAddress": "Mock street",
          "creditorName": "Name Surname",
          "instructedAmount": {
            "currency": "SEK",
            "amount": "3.1"
          },
          "debtorAccount": {
            "iban": "SE0000000000000000000000"
          },
          "creditorAccount": {
            "iban": "DK5555555555555555"
          },
          "priority": "NORMAL",
          "chargeBearer": "SHA",
          "remittanceInformationUnstructured": "European payment",
          "startDate": "2024-10-07",
          "frequency": "Monthly"
        }
      }
    },
    "paymentCancelled": {
      "description": "No response body. Payment was cancelled successfully.",
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      }
    },
    "Error_400": {
      "description": "Bad request. Details are provided in the error code and text.",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "FORMAT_ERROR",
              "text": "Mandatory header is missing: Date"
            }
          ]
        }
      }
    },
    "Error_401": {
      "description": "Unauthorized: missing OAuth2 token or it's expired.",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "TOKEN_INVALID",
              "text": "Could not match OAuth token to TPP - authorization_link: https://psd2.api.swedbank.com/psd2/authorize?response_type=code&scope=PSD2&bic=SWEDSESS&client_id=&redirect_uri="
            }
          ]
        }
      }
    },
    "Error_403": {
      "description": "Forbidden, TPP haven't ordered this API in Swedbank developer portal",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "SERVICE_BLOCKED",
              "text": "API not available"
            }
          ]
        }
      }
    },
    "Error_404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "RESOURCE_NOT_FOUND",
              "text": "The addressed resource is unknown"
            }
          ]
        }
      }
    },
    "Error_405": {
      "description": "Not allowed HTTP method",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "SERVICE_INVALID",
              "text": "HTTP method POST not supported for /{version}/payments/123abc/authorisations/123auth567"
            }
          ]
        }
      }
    },
    "Error_429": {
      "description": "Access exceeded - too many requests",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "ACCESS_EXCEEDED",
              "text": "Reached parallel requests limit: (10)"
            }
          ]
        }
      }
    },
    "Error_500": {
      "description": "Internal Server Error",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "headers": {
        "X-Request-ID": {
          "description": "Returns same value as provided in request",
          "type": "string",
          "format": "UUID"
        },
        "X-Rate-Limit-Limit": {
          "description": "Part of request throttling process. Returns count of allowed request count per time window.",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Remaining": {
          "description": "Part of request throttling process. Returns count of remaining requests per time window",
          "type": "number",
          "format": "integer"
        },
        "X-Rate-Limit-Reset": {
          "description": "Part of request throttling process. Returns how many seconds are left in current time window.",
          "type": "number",
          "format": "integer"
        }
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "INTERNAL_ERROR",
              "text": "Internal Error"
            }
          ]
        }
      }
    },
    "Error_503": {
      "description": "Service Temporary Unavailable",
      "schema": {
        "$ref": "#/definitions/responseError"
      },
      "examples": {
        "application/json": {
          "tppMessages": [
            {
              "category": "ERROR",
              "code": "TEMPORARY_UNAVAILABLE",
              "text": "Planned system maintenance ongoing"
            }
          ]
        }
      }
    }
  },
  "paths": {
    "/periodic-payments/se-international-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate Swedish international recurring transfer/payment on behalf of the Payment Service User (PSU). In case of corporate user, his rights to initiate recurring transfer/payment will be validated accordingly to user's access rights determined in corresponding agreement in bank.\nThe following types of international recurring transfers/payments can be initiated over this endpoint:\n\n - Swedbank payment (payment within Swedbank Group)\n\n - European payment (non urgent payment in EUR or SEK within EU/EEA)\n\n - European payment urgent (urgent payment in EUR within EU/EEA)\n\n - International payment\n\n - International payment urgent\n\nThe type of payment product is automatically defined in the Bank's payment system based on the payment parameters in the request body, and pricing policy is applied to the PSU accordingly.\n\nThe initiated recurring transfer/payment is not executed until it is signed by the PSU using SCA and until the specified 'startDate' becomes current date. An international recurring transfer/payment can be signed by a single PSU, or countersigning may be required. In the case of countersigning, the TPP is responsible for providing a link to start the authorization process for the PSU with the authority to countersign the payment.",
        "operationId": "postSeRecurringInternationalCt",
        "parameters": [
          {
            "$ref": "#/parameters/bicSE"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/requestSeInternationalRecurringCtBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreated"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Swedish International Recurring Payment",
        "tags": [
          "recurring/periodic payments"
        ]
      }
    },
    "/periodic-payments/se-domestic-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate Swedish domestic recurring transfer/payment on behalf of the Payment Service User (PSU).\nThe following types of domestic recurring transfers/payments can be initiated over this endpoint:\n\n - Account transfer in SEK\n\nThe initiated recurring transfer/payment is not executed until it is signed by the PSU using SCA and until the specified 'startDate' becomes current date. A domestic recurring transfer/payment can be signed by a single PSU, or countersigning may be required. In the case of countersigning, the TPP is responsible for providing a link to start the authorization process for the PSU with the authority to countersign the payment.",
        "operationId": "postSeDomesticRecurringCt",
        "parameters": [
          {
            "$ref": "#/parameters/bicSE"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestSeDomesticRecurringCtBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreated"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Swedish Domestic Recurring Payment",
        "tags": [
          "recurring/periodic payments"
        ]
      }
    },
    "/periodic-payments/sepa-credit-transfers": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows to initiate a recurring payment agreement in banks where EUR is a local currency (banks in SEPA zone) in redirect SCA approach. Available in Baltic countries only.\n The initiated recurring payment is not executed until it is signed by the PSU using SCA and until the specified 'startDate' becomes current date.",
        "operationId": "postSepaCreditTransfersRecurringCt",
        "parameters": [
          {
            "$ref": "#/parameters/bicBB"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Explicit-Authorisation-Preferred"
          },
          {
            "$ref": "#/parameters/Digest"
          },
          {
            "$ref": "#/parameters/Signature"
          },
          {
            "$ref": "#/parameters/requestSepaCreditTransferRecurringCtBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/paymentCreated"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Initiate Baltic sepa recurring payment agreement",
        "tags": [
          "recurring/periodic payments"
        ]
      }
    },
    "/periodic-payments/{payment-product}/{paymentID}/authorisations/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates an authorisation sub-resource for initiated recurring/periodic payment. Used if explicit authorisation flow is preffered, usually in decoupled SCA approach, in countersigning, allowing more detailed control of the authorisation process. This endpoint URL is obtained via steering links.\nNote: decoupled SCA approach for recurring/periodic payment is available only in Sweden.",
        "operationId": "postpaymentIdauthorisations",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/PSU-IP-Address"
          },
          {
            "$ref": "#/parameters/PSU-IP-Port"
          },
          {
            "$ref": "#/parameters/PSU-User-Agent"
          },
          {
            "$ref": "#/parameters/PSU-Http-Method"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-URI"
          },
          {
            "$ref": "#/parameters/TPP-Redirect-Preferred"
          },
          {
            "$ref": "#/parameters/TPP-Nok-Redirect-URI"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/postAuthorisations_201"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Start the authorisation process for a recurring payment",
        "tags": [
          "recurring/periodic payments"
        ]
      }
    },
    "/periodic-payments/{payment-product}/{paymentID}/authorisations/{authorisationID}": {
      "get": {
        "description": "Allows to read status of an ongoing recurring/periodic payment authorisation process. This endpoint URL is obtained via steering links.",
        "operationId": "getpaymentIdAuthorisationStatus",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/authorisationID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getAuthorisation_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Read recurring/periodic payment authorisation state",
        "tags": [
          "recurring/periodic payments"
        ]
      },
      "put": {
        "description": "Allows to specify SCA method which will be used for payment authorisation in decoupled SCA approach. Starts SCA process by sending a challenge to user's SCA application. This endpoint URL is obtained via steering links.\n\nNote: In Sweden, if the recipient is not registered in the debtor's recipient list, authorisation for adding the recipient to the list will be required first. For more information about adding the recipient, refer to the Developer Documentation.",
        "operationId": "patchPaymentIdDecoupledAuthorisation",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/authorisationID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          },
          {
            "$ref": "#/parameters/Qr-Code-Required"
          },
          {
            "$ref": "#/parameters/selectDecoupledSCAMethodBody"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/patchAuthorisation_200"
          },
          "201": {
            "$ref": "#/responses/patchAuthorisation_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Specify SCA method for decoupled authorisation",
        "tags": [
          "recurring/periodic payments"
        ]
      }
    },
    "/periodic-payments/{payment-product}/{paymentID}/status": {
      "get": {
        "description": "Allows to read the transaction status of the corresponding payment resource. This endpoint URL is obtained via steering links.",
        "operationId": "getPaymentIdStatus",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPaymentStatus_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Get the transaction status of a recurring/periodic payment initiation.",
        "tags": [
          "recurring/periodic payments"
        ]
      }
    },
    "/periodic-payments/{payment-product}/{paymentID}": {
      "get": {
        "description": "Allows to read content of the initiated payment. This endpoint URL is obtained via steering links.",
        "operationId": "getPaymentI",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/getPayment_200"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Get content of initiated recurring/periodic payment (agreement).",
        "tags": [
          "recurring/periodic payments"
        ]
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "description": "Allows TPP to cancel initiated recurring payment by changing it's state to \"CANC\" in Sweden and Latvia. In Lithuania and Estonia, TPP can't cancel recurring payment agreement, it can be done only by PSU in internet bank.",
        "operationId": "deleteConsent",
        "parameters": [
          {
            "$ref": "#/parameters/payment-product"
          },
          {
            "$ref": "#/parameters/paymentID"
          },
          {
            "$ref": "#/parameters/bic"
          },
          {
            "$ref": "#/parameters/app-id"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Authorization"
          },
          {
            "$ref": "#/parameters/X-Request-ID"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "$ref": "#/responses/paymentCancelled"
          },
          "400": {
            "$ref": "#/responses/Error_400"
          },
          "401": {
            "$ref": "#/responses/Error_401"
          },
          "403": {
            "$ref": "#/responses/Error_403"
          },
          "404": {
            "$ref": "#/responses/Error_404"
          },
          "405": {
            "$ref": "#/responses/Error_405"
          },
          "429": {
            "$ref": "#/responses/Error_429"
          },
          "500": {
            "$ref": "#/responses/Error_500"
          },
          "503": {
            "$ref": "#/responses/Error_503"
          }
        },
        "summary": "Delete initiated recurring/periodic payment (agreement)",
        "tags": [
          "recurring/periodic payments"
        ]
      }
    }
  },
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "description": "Allows the initiation of a recurring/periodic payment. Following the payment initiation request, payment systems handle the payment data asynchronously. TPPs should continuously check the payment status to ensure that it is ready for the subsequent steps in the payment process.\nRecurring/Periodic payment is set to start at a certain future date and to be executed at regular time intervals after the start date.",
      "name": "recurring/periodic payments"
    }
  ]
}